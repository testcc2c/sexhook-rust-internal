#pragma once

namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;
		constexpr auto get_JustCreated = 0x3011e0;
		constexpr auto set_JustCreated = 0x3013d0;
		constexpr auto ClientSpawn = 0x2ff9b0;
		constexpr auto ClientOnEnable = 0x2ff930;
		constexpr auto ClientInit = 0x2ff740;
		constexpr auto OnNetworkUpdate = 0x300cb0;
		constexpr auto PreNetworkUpdate = 0x2f4fd0;
		constexpr auto PostNetworkUpdate = 0x2f4fd0;
		constexpr auto ShouldDestroyWithGroup = 0x2f6d70;
		constexpr auto ShouldDestroyImmediately = 0x2f4190;
		constexpr auto NetworkDestroy = 0x300840;
		constexpr auto DoClientDestroy = 0x2ffd80;
		constexpr auto DoNetworkDestroy = 0x2f4fd0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x2ff520;
		constexpr auto PostProcess = 0x300e30;
		constexpr auto GetParentEntity = 0x300170;
		constexpr auto HasParent = 0x300180;
		constexpr auto AddChild = 0x2ff490;
		constexpr auto OnChildAdded = 0x2f4fd0;
		constexpr auto RemoveChild = 0x300eb0;
		constexpr auto OnChildRemoved = 0x2f4fd0;
		constexpr auto get_gameManager = 0x301300;
		constexpr auto get_prefabAttribute = 0x301360;
		constexpr auto get_IsDestroyed = 0x3011d0;
		constexpr auto set_IsDestroyed = 0x3013c0;
		constexpr auto get_PrefabName = 0x3011f0;
		constexpr auto get_ShortPrefabName = 0x301270;
		constexpr auto GetNetworkPosition = 0x3000e0;
		constexpr auto GetNetworkRotation = 0x300130;
		constexpr auto InvokeString = 0x300190;
		constexpr auto LookupPrefab = 0x3007a0;
		constexpr auto EqualNetID = 0x300090;
		constexpr auto ResetState = 0x300f20;
		constexpr auto InitShared = 0x2f4fd0;
		constexpr auto PreInitShared = 0x2f4fd0;
		constexpr auto PostInitShared = 0x2f4fd0;
		constexpr auto DestroyShared = 0x2f4fd0;
		constexpr auto OnNetworkGroupEnter = 0x2f4fd0;
		constexpr auto OnNetworkGroupLeave = 0x2f4fd0;
		constexpr auto OnNetworkGroupChange = 0x300b70;
		constexpr auto OnNetworkSubscribersEnter = 0x2f4fd0;
		constexpr auto OnNetworkSubscribersLeave = 0x2f4fd0;
		constexpr auto EntityDestroy = 0x2fffa0;
		constexpr auto DoEntityDestroy = 0x2ffe40;
		constexpr auto SpawnShared = 0x300f70;
		constexpr auto Load = 0x3003e0;
		constexpr auto get_isServer = 0x2f4190;
		constexpr auto get_isClient = 0x2f6d70;
		constexpr auto OnRpcMessage = 0x2f4190;
		constexpr auto ctor = 0x301130;
		constexpr auto cctor = 0x301080;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x238;
		constexpr auto __menuOption_Drink = 0x290;
		constexpr auto __menuOption_InviteToTeam = 0x2e8;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x340;
		constexpr auto __menuOption_Menu_LootPlayer = 0x398;
		constexpr auto __menuOption_Promote = 0x3f0;
		constexpr auto __menuOption_SaltWater = 0x448;
		constexpr auto currentViewMode = 0x4a0;
		constexpr auto selectedViewMode = 0x4a4;
		constexpr auto lastRevivePoint = 0x4a8;
		constexpr auto lastReviveDirection = 0x4b4;
		constexpr auto playerModel = 0x4c0;
		constexpr auto Frozen = 0x4c8;
		constexpr auto voiceRecorder = 0x4d0;
		constexpr auto voiceSpeaker = 0x4d8;
		constexpr auto input = 0x4e0;
		constexpr auto movement = 0x4e8;
		constexpr auto collision = 0x4f0;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x4f8;
		constexpr auto _lookingAtEntity = 0x500;
		constexpr auto _lookingAtCollider = 0x508;
		constexpr auto lookingAtPointk__BackingField = 0x510;
		constexpr auto wakeTime = 0x51c;
		constexpr auto needsClothesRebuild = 0x520;
		constexpr auto wasSleeping = 0x521;
		constexpr auto wokeUpBefore = 0x522;
		constexpr auto wasDead = 0x523;
		constexpr auto lastClothesHash = 0x524;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x528;
		constexpr auto GestureViewModel = 0x530;
		constexpr auto timeSinceUpdatedLookingAt = 0x538;
		constexpr auto nextTopologyTestTime = 0x53c;
		constexpr auto usePressTime = 0x540;
		constexpr auto useHeldTime = 0x544;
		constexpr auto lookingAtTest = 0x548;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x550;
		constexpr auto gestureList = 0x560;
		constexpr auto gestureFinishedTime = 0x568;
		constexpr auto blockHeldInputTimer = 0x56c;
		constexpr auto currentGesture = 0x570;
		constexpr auto disabledHeldEntity = 0x578;
		constexpr auto nextGestureMenuOpenTime = 0x580;
		constexpr auto lastGestureCancel = 0x584;
		constexpr auto client_lastHelloTime = 0x588;
		constexpr auto currentTeam = 0x590;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x598;
		constexpr auto lastReceivedTeamTime = 0x5a0;
		constexpr auto lastPresenceTeamId = 0x5a8;
		constexpr auto lastPresenceTeamSize = 0x5b0;
		constexpr auto playerGroupKey = 0x5b8;
		constexpr auto playerGroupSizeKey = 0x5c0;
		constexpr auto clActiveItem = 0x5c8;
		constexpr auto ClientCurrentMapNote = 0x5d0;
		constexpr auto ClientCurrentDeathNote = 0x5d8;
		constexpr auto missions = 0x5e0;
		constexpr auto _activeMission = 0x5e8;
		constexpr auto modelState = 0x5f0;
		constexpr auto mounted = 0x5f8;
		constexpr auto nextSeatSwapTime = 0x608;
		constexpr auto PetEntity = 0x610;
		constexpr auto lastPetCommandIssuedTime = 0x618;
		constexpr auto PetPrefabID = 0x61c;
		constexpr auto PetID = 0x620;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x624;
		constexpr auto cachedBuildingPrivilege = 0x628;
		constexpr auto maxProjectileID = 0x630;
		constexpr auto lastUpdateTime = 0x634;
		constexpr auto cachedThreatLevel = 0x638;
		constexpr auto serverTickRate = 0x63c;
		constexpr auto clientTickRate = 0x640;
		constexpr auto serverTickInterval = 0x644;
		constexpr auto clientTickInterval = 0x648;
		constexpr auto lastSentTickTime = 0x64c;
		constexpr auto lastSentTick = 0x650;
		constexpr auto nextVisThink = 0x658;
		constexpr auto lastTimeSeen = 0x65c;
		constexpr auto debugPrevVisible = 0x660;
		constexpr auto fallDamageEffect = 0x668;
		constexpr auto drownEffect = 0x670;
		constexpr auto playerFlags = 0x678;
		constexpr auto eyes = 0x680;
		constexpr auto inventory = 0x688;
		constexpr auto blueprints = 0x690;
		constexpr auto metabolism = 0x698;
		constexpr auto modifiers = 0x6a0;
		constexpr auto playerCollider = 0x6a8;
		constexpr auto Belt = 0x6b0;
		constexpr auto playerRigidbody = 0x6b8;
		constexpr auto userID = 0x6c0;
		constexpr auto UserIDString = 0x6c8;
		constexpr auto gamemodeteam = 0x6d0;
		constexpr auto reputation = 0x6d4;
		constexpr auto _displayName = 0x6d8;
		constexpr auto _lastSetName = 0x6e0;
		constexpr auto playerColliderStanding = 0x6e8;
		constexpr auto playerColliderDucked = 0x6fc;
		constexpr auto playerColliderCrawling = 0x710;
		constexpr auto playerColliderLyingDown = 0x724;
		constexpr auto cachedProtection = 0x738;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x740;
		constexpr auto nextColliderRefreshTime = 0x744;
		constexpr auto clothingBlocksAiming = 0x748;
		constexpr auto clothingMoveSpeedReduction = 0x74c;
		constexpr auto clothingWaterSpeedBonus = 0x750;
		constexpr auto clothingAccuracyBonus = 0x754;
		constexpr auto equippingBlocked = 0x758;
		constexpr auto eggVision = 0x75c;
		constexpr auto activeTelephone = 0x760;
		constexpr auto designingAIEntity = 0x768;

		constexpr auto GetMenuOptions = 0x311ff0;
		constexpr auto get_HasMenuOptions = 0x32b160;
		constexpr auto OnRpcMessage = 0x319a70;
		constexpr auto CanBeLooted = 0x3081a0;
		constexpr auto get_LootPanelTitle = 0x32b680;
		constexpr auto Menu_LootPlayer = 0x318a70;
		constexpr auto Menu_LootPlayer_ShowIf = 0x318a50;
		constexpr auto RPC_OpenLootPanel = 0x323550;
		constexpr auto PlayOpenSound = 0x3218b0;
		constexpr auto InFirstPersonMode = 0x3148d0;
		constexpr auto UpdateViewMode = 0x329420;
		constexpr auto get_idealViewMode = 0x32b860;
		constexpr auto get_shouldDrawBody = 0x32bca0;
		constexpr auto OnViewModeChanged = 0x321360;
		constexpr auto ModifyCamera = 0x318ae0;
		constexpr auto Menu_AssistPlayer = 0x318a10;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x3189d0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x318760;
		constexpr auto get_lookingAt = 0x32bc10;
		constexpr auto get_lookingAtEntity = 0x32bb60;
		constexpr auto get_lookingAtCollider = 0x32bad0;
		constexpr auto get_lookingAtPoint = 0x32bbf0;
		constexpr auto set_lookingAtPoint = 0x32bfa0;
		constexpr auto GetExtrapolationTime = 0x3113c0;
		constexpr auto GetLocalVelocityClient = 0x311df0;
		constexpr auto ClientInit = 0x309c80;
		constexpr auto CreatePlayerModel = 0x30e8e0;
		constexpr auto CreatePlayerCollision = 0x30e6f0;
		constexpr auto CreatePlayerMovement = 0x30ee40;
		constexpr auto InitLocalPlayer = 0x314900;
		constexpr auto InitRemotePlayer = 0x314be0;
		constexpr auto HasLocalControls = 0x313f80;
		constexpr auto SetNetworkPosition = 0x3261b0;
		constexpr auto SetNetworkRotation = 0x326260;
		constexpr auto DoClientDestroy = 0x30f2c0;
		constexpr auto PostNetworkUpdate = 0x3220a0;
		constexpr auto OnFirstWakeUp = 0x319490;
		constexpr auto get_TimeAwake = 0x32b6a0;
		constexpr auto CL_ClothingChanged = 0x307780;
		constexpr auto ForceRebuild = 0x310910;
		constexpr auto RebuildWorldModel = 0x3239f0;
		constexpr auto SetDefaultFootstepEffects = 0x325960;
		constexpr auto OnSignal = 0x320de0;
		constexpr auto FindBone = 0x30ffb0;
		constexpr auto GetBones = 0x310930;
		constexpr auto ShouldLerp = 0x326a70;
		constexpr auto get_VisiblePlayerList = 0x32b700;
		constexpr auto ClearVisibility = 0x3097c0;
		constexpr auto RegisterForVisibility = 0x3241f0;
		constexpr auto UnregisterFromVisibility = 0x3271a0;
		constexpr auto FindByID_Clientside = 0x3100b0;
		constexpr auto Find_Clientside = 0x310280;
		constexpr auto GetRandomFloatBasedOnUserID = 0x3137a0;
		constexpr auto DisplayHealthInfo = 0x2f4190;
		constexpr auto ShouldDestroyWithGroup = 0x326a40;
		constexpr auto SetInheritedVelocity = 0x325e30;
		constexpr auto GetPerformanceReport = 0x3136a0;
		constexpr auto OnBecameRagdoll = 0x318ee0;
		constexpr auto OnVoiceData = 0x321870;
		constexpr auto RecieveAchievement = 0x323d80;
		constexpr auto CraftMode = 0x30e480;
		constexpr auto StartDesigningAI = 0x326d50;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x319250;
		constexpr auto ClientOnEnable = 0x30ac20;
		constexpr auto Client_OnRepairFailedResources = 0x30cf90;
		constexpr auto get_IsWearingDiveGoggles = 0x32b670;
		constexpr auto set_IsWearingDiveGoggles = 0x32be50;
		constexpr auto UpdateClothesIfNeeded = 0x3272f0;
		constexpr auto MakeVisible = 0x318470;
		constexpr auto ClientUpdate_Sleeping = 0x30bfa0;
		constexpr auto ClientUpdate = 0x30c3e0;
		constexpr auto RebuildClothingItems = 0x3237d0;
		constexpr auto UpdateClothingItems = 0x3277e0;
		constexpr auto UpdateHolsterOffsets = 0x327f10;
		constexpr auto PostLateClientCycle = 0x321fe0;
		constexpr auto IsLocalPlayer = 0x3164e0;
		constexpr auto ClientUpdateLocalPlayer = 0x30ad80;
		constexpr auto UpdateTopologyStats = 0x3292c0;
		constexpr auto ClientTick = 0x30acd0;
		constexpr auto DoMovement = 0x30f5b0;
		constexpr auto MountableOverrideViewAngles = 0x318bd0;
		constexpr auto BlockSprint = 0x306c70;
		constexpr auto BlockJump = 0x306bd0;
		constexpr auto ClientInput = 0x30a170;
		constexpr auto UseAction = 0x329780;
		constexpr auto GetInteractionEntity = 0x311950;
		constexpr auto QuickUse = 0x3233b0;
		constexpr auto LongUse = 0x3183b0;
		constexpr auto UseStop = 0x329a50;
		constexpr auto UpdateLookingAt = 0x3280a0;
		constexpr auto ResetLookingAt = 0x324640;
		constexpr auto SetLookingAt = 0x325fc0;
		constexpr auto CheckLookingAtVisible = 0x308fb0;
		constexpr auto FindVehicleParentFor = 0x310140;
		constexpr auto OnDied = 0x3193c0;
		constexpr auto OnRespawnInformation = 0x3197c0;
		constexpr auto RequestRespawnUpdates = 0x3244f0;
		constexpr auto OnLand = 0x3195d0;
		constexpr auto StartLoading = 0x326ee0;
		constexpr auto FinishLoading = 0x310510;
		constexpr auto FinishedLoadingRoutine = 0x3105e0;
		constexpr auto DirectionalDamage = 0x30f120;
		constexpr auto UnlockedBlueprint = 0x327130;
		constexpr auto CheckForRespawnInfo = 0x308f40;
		constexpr auto UpdateRichPresenceState = 0x329020;
		constexpr auto HandleCompanionPairingResult = 0x313a80;
		constexpr auto UpdateWaterDrinkingPoint = 0x329460;
		constexpr auto GetWaterDrinkingPoint = 0x313a60;
		constexpr auto Drink = 0x30f840;
		constexpr auto Drink_ShowIf = 0x30f670;
		constexpr auto SaltWater = 0x2f4fd0;
		constexpr auto SaltWater_ShowIf = 0x3247c0;
		constexpr auto Climb = 0x30dc50;
		constexpr auto Climb_ShowIf = 0x30d9c0;
		constexpr auto HasPlayerFlag = 0x313ff0;
		constexpr auto get_IsReceivingSnapshot = 0x32b660;
		constexpr auto get_IsAdmin = 0x32b5a0;
		constexpr auto get_IsDeveloper = 0x32b630;
		constexpr auto get_IsAiming = 0x32b5b0;
		constexpr auto get_IsFlying = 0x32b640;
		constexpr auto get_IsConnected = 0x32b5c0;
		constexpr auto get_InGesture = 0x32b4f0;
		constexpr auto get_CurrentGestureBlocksMovement = 0x32b040;
		constexpr auto get_CurrentGestureIsDance = 0x32b080;
		constexpr auto get_CurrentGestureIsFullBody = 0x32b0c0;
		constexpr auto get_InGestureCancelCooldown = 0x32b4c0;
		constexpr auto SetGestureMenuOpen = 0x325a30;
		constexpr auto RequestStartGesture = 0x324590;
		constexpr auto Client_StartGesture = 0x30d4f0;
		constexpr auto ProcessDanceAction = 0x322770;
		constexpr auto SayingHello = 0x324a30;
		constexpr auto ProcessGestureStart = 0x322c70;
		constexpr auto EndGesture = 0x30fb60;
		constexpr auto EndLocalGesture = 0x30fc00;
		constexpr auto EndGestureShared = 0x30f9f0;
		constexpr auto HideHeldEntity = 0x314760;
		constexpr auto CancelGesture = 0x308c80;
		constexpr auto RemoteGestureCancel = 0x3242e0;
		constexpr auto CancelGestureInput = 0x308860;
		constexpr auto ClearGestureCooldown = 0x309670;
		constexpr auto ConVarRequestStartGesture = 0x30e220;
		constexpr auto Client_RemoteCancelledGesture = 0x30d4a0;
		constexpr auto IsGestureBlocked = 0x315e40;
		constexpr auto get_clientTeamLifetime = 0x32b770;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x3072b0;
		constexpr auto UpdateSteamGroup = 0x329070;
		constexpr auto ClearSteamGroup = 0x3096a0;
		constexpr auto CLIENT_ClearTeam = 0x306d10;
		constexpr auto CLIENT_PendingInvite = 0x306eb0;
		constexpr auto InviteToTeam = 0x314c50;
		constexpr auto Promote = 0x323240;
		constexpr auto Menu_Promote_Start = 0x2f4fd0;
		constexpr auto Promote_ShowIf = 0x322e90;
		constexpr auto LocalPlayerIsLeader = 0x317ec0;
		constexpr auto Invite_ShowIf = 0x315170;
		constexpr auto GetHeldEntity = 0x3114b0;
		constexpr auto GetHeldItem = 0x3116e0;
		constexpr auto GetHeldItemID = 0x311690;
		constexpr auto HeldEntityViewAngles = 0x314540;
		constexpr auto HeldEntityFrame = 0x3140d0;
		constexpr auto HeldEntityInput = 0x3142a0;
		constexpr auto HeldItemUse = 0x314660;
		constexpr auto HeldEntityStart = 0x314470;
		constexpr auto HeldEntityEnd = 0x314000;
		constexpr auto IsHostileItem = 0x3161f0;
		constexpr auto IsItemHoldRestricted = 0x316350;
		constexpr auto MapInfoOnEnable = 0x318520;
		constexpr auto Client_ReceiveMarkers = 0x30d160;
		constexpr auto Client_UpdateDeathMarker = 0x30d890;
		constexpr auto Client_AddNewDeathMarker = 0x30ce50;
		constexpr auto AddPointOfInterest = 0x305df0;
		constexpr auto ClearAllPointsOfInterest = 0x309520;
		constexpr auto ClearAllMapMarkers = 0x3093c0;
		constexpr auto HasAttemptedMission = 0x313b30;
		constexpr auto CanAcceptMission = 0x307ac0;
		constexpr auto IsMissionActive = 0x3165c0;
		constexpr auto HasCompletedMission = 0x313ca0;
		constexpr auto HasFailedMission = 0x313e10;
		constexpr auto SetActiveMission = 0x325940;
		constexpr auto GetActiveMission = 0x310920;
		constexpr auto HasActiveMission = 0x313b20;
		constexpr auto LoadMissions = 0x3173c0;
		constexpr auto OnModelState = 0x319730;
		constexpr auto OnModelStateChanged = 0x319690;
		constexpr auto get_isMounted = 0x32ba00;
		constexpr auto get_isMountingHidingWeapon = 0x32ba20;
		constexpr auto GetMounted = 0x3131a0;
		constexpr auto GetMountedVehicle = 0x313110;
		constexpr auto MarkSwapSeat = 0x318570;
		constexpr auto SwapSeatCooldown = 0x326f60;
		constexpr auto ClientUpdateMounted = 0x30bb20;
		constexpr auto CLIENT_SetPetPrefabID = 0x3076b0;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x307500;
		constexpr auto LinkPet = 0x317270;
		constexpr auto SetPetMenuOpen = 0x326370;
		constexpr auto ClientIssuePetCommand = 0x30ab30;
		constexpr auto IsSleeping = 0x3168c0;
		constexpr auto IsSpectating = 0x3168d0;
		constexpr auto IsRelaxed = 0x3167e0;
		constexpr auto IsServerFalling = 0x3168b0;
		constexpr auto GetBuildingPrivilege = 0x310d40;
		constexpr auto CanBuild = 0x308470;
		constexpr auto IsBuildingBlocked = 0x315bc0;
		constexpr auto IsBuildingAuthed = 0x315780;
		constexpr auto CanPlaceBuildingPrivilege = 0x308600;
		constexpr auto NewProjectileID = 0x318c60;
		constexpr auto NewProjectileSeed = 0x318c70;
		constexpr auto SendProjectileAttack = 0x325690;
		constexpr auto SendProjectileRicochet = 0x3256e0;
		constexpr auto SendProjectileUpdate = 0x325730;
		constexpr auto Load = 0x317960;
		constexpr auto SpectatedPlayerHeadshot = 0x326cc0;
		constexpr auto GetThreatLevel = 0x313a40;
		constexpr auto EnsureUpdated = 0x30fd20;
		constexpr auto SetHostileLength = 0x325d80;
		constexpr auto SetWeaponDrawnDuration = 0x3269a0;
		constexpr auto ModifyInputState = 0x2f4fd0;
		constexpr auto ForcePositionToParentOffset = 0x310650;
		constexpr auto UpdateClientTickRate = 0x327290;
		constexpr auto ForcePositionTo = 0x310780;
		constexpr auto SendVoiceData = 0x325780;
		constexpr auto SendClientTick = 0x324fd0;
		constexpr auto NotifyUnderwearChange = 0x318cd0;
		constexpr auto UpdatePlayerVisibilities = 0x328d20;
		constexpr auto TimeSinceSeen = 0x326f90;
		constexpr auto SetNextVisThink = 0x326340;
		constexpr auto WantsVisUpdate = 0x32a590;
		constexpr auto IsAimingAt = 0x3153b0;
		constexpr auto UpdateCullingSpheres = 0x327c40;
		constexpr auto VisUpdateUsingCulling = 0x329bd0;
		constexpr auto VisUpdateUsingRays = 0x329ce0;
		constexpr auto LogDebugCull = 0x318070;
		constexpr auto OnVisibilityChanged = 0x321570;
		constexpr auto VisUpdate = 0x32a100;
		constexpr auto VisPlayerArmed = 0x329b10;
		constexpr auto AnyPartVisible = 0x305fc0;
		constexpr auto CalcVisUpdateRate = 0x307980;
		constexpr auto PointSeePoint = 0x321d10;
		constexpr auto IsWounded = 0x316bd0;
		constexpr auto IsCrawling = 0x315c70;
		constexpr auto IsIncapacitated = 0x316340;
		constexpr auto ToPlayer = 0x326fb0;
		constexpr auto get_Connection = 0x32b030;
		constexpr auto get_displayName = 0x32b7c0;
		constexpr auto set_displayName = 0x32be60;
		constexpr auto SanitizePlayerNameString = 0x324990;
		constexpr auto IsGod = 0x316120;
		constexpr auto GetNetworkRotation = 0x313230;
		constexpr auto CanInteract = 0x3085a0;
		constexpr auto StartHealth = 0x326ec0;
		constexpr auto StartMaxHealth = 0x3218a0;
		constexpr auto MaxHealth = 0x3185b0;
		constexpr auto MaxVelocity = 0x318660;
		constexpr auto WorldSpaceBounds = 0x32aad0;
		constexpr auto GetMountVelocity = 0x313040;
		constexpr auto GetInheritedProjectileVelocity = 0x3117d0;
		constexpr auto GetInheritedThrowVelocity = 0x311890;
		constexpr auto GetInheritedDropVelocity = 0x311710;
		constexpr auto PreInitShared = 0x322310;
		constexpr auto DestroyShared = 0x30f0a0;
		constexpr auto InSafeZone = 0x3148f0;
		constexpr auto LateClientCycle = 0x316be0;
		constexpr auto ClientCycle = 0x309980;
		constexpr auto GetBounds = 0x3109c0;
		constexpr auto GetCenter = 0x310df0;
		constexpr auto GetOffset = 0x313310;
		constexpr auto GetSize = 0x3138a0;
		constexpr auto GetHeight = 0x311490;
		constexpr auto GetRadius = 0x2feb60;
		constexpr auto GetJumpHeight = 0x311de0;
		constexpr auto TriggerPoint = 0x327030;
		constexpr auto NoClipOffset = 0x318c80;
		constexpr auto NoClipRadius = 0x318cc0;
		constexpr auto MaxDeployDistance = 0x3185a0;
		constexpr auto ClientUpdatePersistantData = 0x30bf70;
		constexpr auto GetMinSpeed = 0x313010;
		constexpr auto GetMaxSpeed = 0x311fc0;
		constexpr auto GetSpeed = 0x313900;
		constexpr auto OnAttacked = 0x318d10;
		constexpr auto EnablePlayerCollider = 0x30f990;
		constexpr auto DisablePlayerCollider = 0x30f260;
		constexpr auto RefreshColliderSize = 0x323ea0;
		constexpr auto SetPlayerRigidbodyState = 0x326980;
		constexpr auto AddPlayerRigidbody = 0x305c70;
		constexpr auto RemovePlayerRigidbody = 0x3243c0;
		constexpr auto IsEnsnared = 0x315d50;
		constexpr auto IsAttacking = 0x315580;
		constexpr auto CanAttack = 0x307f50;
		constexpr auto OnLadder = 0x319540;
		constexpr auto IsSwimming = 0x316b80;
		constexpr auto IsHeadUnderwater = 0x3161a0;
		constexpr auto IsOnGround = 0x316730;
		constexpr auto IsRunning = 0x3167f0;
		constexpr auto IsDucked = 0x315c90;
		constexpr auto RecentlyTeleported = 0x323ce0;
		constexpr auto ShowToast = 0x326ad0;
		constexpr auto ChatMessage = 0x308d50;
		constexpr auto ConsoleMessage = 0x30e3d0;
		constexpr auto PenetrationResistance = 0x3218a0;
		constexpr auto ScaleDamage = 0x324d40;
		constexpr auto UpdateMoveSpeedFromClothing = 0x328950;
		constexpr auto UpdateProtectionFromClothing = 0x328f00;
		constexpr auto Categorize = 0x308d20;
		constexpr auto ToString = 0x326fc0;
		constexpr auto GetDebugStatus = 0x311080;
		constexpr auto GetItem = 0x311d30;
		constexpr auto get_Traits = 0x32b6e0;
		constexpr auto WaterFactor = 0x32a5b0;
		constexpr auto AirFactor = 0x305ed0;
		constexpr auto GetOxygenTime = 0x313360;
		constexpr auto ShouldInheritNetworkGroup = 0x3168d0;
		constexpr auto AnyPlayersVisibleToEntity = 0x306600;
		constexpr auto IsStandingOnEntity = 0x3168e0;
		constexpr auto SetActiveTelephone = 0x325950;
		constexpr auto get_HasActiveTelephone = 0x32b100;
		constexpr auto get_IsDesigningAI = 0x32b5d0;
		constexpr auto ClearDesigningAIEntity = 0x309650;
		constexpr auto ctor = 0x32aeb0;
		constexpr auto cctor = 0x32ad60;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x2ff060;
		constexpr auto set_Owner = 0x2fef10;
		constexpr auto get_InheritedVelocity = 0x2ff000;
		constexpr auto set_InheritedVelocity = 0x2ff100;
		constexpr auto get_TargetMovement = 0x2ff0b0;
		constexpr auto set_TargetMovement = 0x2ff120;
		constexpr auto get_Running = 0x2ff0a0;
		constexpr auto set_Running = 0x2ff110;
		constexpr auto get_Ducking = 0x2fefe0;
		constexpr auto set_Ducking = 0x2ff0e0;
		constexpr auto get_Crawling = 0x2fefd0;
		constexpr auto set_Crawling = 0x2ff0d0;
		constexpr auto get_Grounded = 0x2feff0;
		constexpr auto set_Grounded = 0x2ff0f0;
		constexpr auto get_IsRunning = 0x2ff050;
		constexpr auto get_IsDucked = 0x2ff030;
		constexpr auto get_IsCrawling = 0x2ff020;
		constexpr auto get_IsGrounded = 0x2ff040;
		constexpr auto CurrentVelocity = 0x2fec40;
		constexpr auto CurrentMoveSpeed = 0x2fcd90;
		constexpr auto GetCollider = 0x2fc9e0;
		constexpr auto Init = 0x2fef10;
		constexpr auto BlockJump = 0x2f4fd0;
		constexpr auto BlockSprint = 0x2f4fd0;
		constexpr auto get_RecentlyTeleported = 0x2ff070;
		constexpr auto ClientInput = 0x2f4fd0;
		constexpr auto DoFixedUpdate = 0x2f4fd0;
		constexpr auto FrameUpdate = 0x2fedc0;
		constexpr auto TeleportTo = 0x2fef20;
		constexpr auto Push = 0x2f4fd0;
		constexpr auto SetParent = 0x2f4fd0;
		constexpr auto FixedUpdate = 0x2fecb0;
		constexpr auto PlayerAttemptedMount = 0x2f4fd0;
		constexpr auto PlayerCompletedMount = 0x2f4fd0;
		constexpr auto ctor = 0x2fefc0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x278;
		constexpr auto damageScale = 0x27c;
		constexpr auto distanceScale = 0x280;
		constexpr auto projectileVelocityScale = 0x284;
		constexpr auto automatic = 0x288;
		constexpr auto usableByTurret = 0x289;
		constexpr auto turretDamageScale = 0x28c;
		constexpr auto attackFX = 0x290;
		constexpr auto silencedAttack = 0x298;
		constexpr auto muzzleBrakeAttack = 0x2a0;
		constexpr auto MuzzlePoint = 0x2a8;
		constexpr auto reloadTime = 0x2b0;
		constexpr auto canUnloadAmmo = 0x2b4;
		constexpr auto primaryMagazine = 0x2b8;
		constexpr auto fractionalReload = 0x2c0;
		constexpr auto reloadStartDuration = 0x2c4;
		constexpr auto reloadFractionDuration = 0x2c8;
		constexpr auto reloadEndDuration = 0x2cc;
		constexpr auto aimSway = 0x2d0;
		constexpr auto aimSwaySpeed = 0x2d4;
		constexpr auto recoil = 0x2d8;
		constexpr auto aimconeCurve = 0x2e0;
		constexpr auto aimCone = 0x2e8;
		constexpr auto hipAimCone = 0x2ec;
		constexpr auto aimconePenaltyPerShot = 0x2f0;
		constexpr auto aimConePenaltyMax = 0x2f4;
		constexpr auto aimconePenaltyRecoverTime = 0x2f8;
		constexpr auto aimconePenaltyRecoverDelay = 0x2fc;
		constexpr auto stancePenaltyScale = 0x300;
		constexpr auto hasADS = 0x304;
		constexpr auto noAimingWhileCycling = 0x305;
		constexpr auto manualCycle = 0x306;
		constexpr auto needsCycle = 0x307;
		constexpr auto isCycling = 0x308;
		constexpr auto aiming = 0x309;
		constexpr auto resetDuration = 0x30c;
		constexpr auto numShotsFired = 0x310;
		constexpr auto nextReloadTime = 0x314;
		constexpr auto startReloadTime = 0x318;
		constexpr auto stancePenalty = 0x31c;
		constexpr auto aimconePenalty = 0x320;
		constexpr auto isReloading = 0x324;
		constexpr auto swaySampleTime = 0x328;
		constexpr auto lastShotTime = 0x32c;
		constexpr auto reloadPressTime = 0x330;
		constexpr auto ammoTypePreReload = 0x338;
		constexpr auto fractionalReloadDesiredCount = 0x340;
		constexpr auto fractionalReloadNumAdded = 0x344;
		constexpr auto triggerReady = 0x348;
		constexpr auto nextHeightCheckTime = 0x34c;
		constexpr auto cachedUnderground = 0x350;
		constexpr auto createdProjectiles = 0x358;

		constexpr auto OnRpcMessage = 0x8dec00;
		constexpr auto GetInheritedVelocity = 0x8dc2e0;
		constexpr auto GetDamageScale = 0x8dc2c0;
		constexpr auto GetDistanceScale = 0x8dc2d0;
		constexpr auto GetProjectileVelocityScale = 0x301bb0;
		constexpr auto StartReloadCooldown = 0x8e0380;
		constexpr auto ResetReloadCooldown = 0x8df800;
		constexpr auto HasReloadCooldown = 0x8dd1d0;
		constexpr auto GetReloadCooldown = 0x8dcad0;
		constexpr auto GetReloadIdle = 0x8dcc30;
		constexpr auto OnDrawGizmos = 0x8de440;
		constexpr auto GetRecoil = 0x8dcac0;
		constexpr auto get_isSemiAuto = 0x8e06e0;
		constexpr auto GetAimCone = 0x8dba20;
		constexpr auto ScaleRepeatDelay = 0x8df810;
		constexpr auto GetProjectileModifier = 0x8dc480;
		constexpr auto DidAttackClientside = 0x8da110;
		constexpr auto GetItemOptions = 0x8dc330;
		constexpr auto EditViewAngles = 0x8db020;
		constexpr auto OnFrame = 0x8de810;
		constexpr auto ShotFired = 0x8dfb40;
		constexpr auto SimulateAimcone = 0x8dfba0;
		constexpr auto CanAttack = 0x8d9c40;
		constexpr auto CanAim = 0x8d9c10;
		constexpr auto OnInput = 0x8de820;
		constexpr auto ReadyToAim = 0x8df750;
		constexpr auto ReadyToFire = 0x8df7a0;
		constexpr auto AmmoTypeClicked = 0x8d9af0;
		constexpr auto AddAmmoOption = 0x8d9940;
		constexpr auto GetReloadMenu = 0x8dccb0;
		constexpr auto PredictAmmoType = 0x8df3b0;
		constexpr auto HasMoreThanOneAmmoType = 0x8dcf20;
		constexpr auto OnDeploy = 0x8de400;
		constexpr auto DoReload = 0x8daaa0;
		constexpr auto InsertAmmoFraction = 0x8dd200;
		constexpr auto CancelFractionalReloading = 0x8d9c60;
		constexpr auto ClientFinishFractionalReload = 0x8d9d00;
		constexpr auto ClientSingleReload = 0x8d9e40;
		constexpr auto DoAttack = 0x8da1e0;
		constexpr auto BeginCycle = 0x8d9b80;
		constexpr auto LaunchProjectile = 0x8de210;
		constexpr auto DryFire = 0x8daf60;
		constexpr auto ProcessSpectatorViewmodel = 0x8df6f0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8df5e0;
		constexpr auto GetReloadDuration = 0x8dcb50;
		constexpr auto GetAvailableAmmo = 0x8dc0b0;
		constexpr auto IsSilenced = 0x8dd260;
		constexpr auto FiredUnderground = 0x8db990;
		constexpr auto OnSignal = 0x8decf0;
		constexpr auto LaunchProjectileClientside = 0x8dd440;
		constexpr auto CreateProjectile = 0x8d9f80;
		constexpr auto UpdateAmmoDisplay = 0x8e03d0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2f4190;
		constexpr auto Load = 0x8de360;
		constexpr auto ctor = 0x8e0480;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTe_dius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0x94c640;
		constexpr auto GetCollider = 0x2ff2b0;
		constexpr auto OnDisable = 0x951520;
		constexpr auto Init = 0x94ed50;
		constexpr auto OnCollisionEnter = 0x951360;
		constexpr auto OnCollisionStay = 0x951440;
		constexpr auto GroundCheck = 0x94e510;
		constexpr auto TeleportTo = 0x951bd0;
		constexpr auto UpdateCurrentLadder = 0x951f00;
		constexpr auto WantsSprint = 0x952f50;
		constexpr auto ClientInput = 0x94c930;
		constexpr auto Movement_Water = 0x9507b0;
		constexpr auto Movement_Mounted = 0x94f890;
		constexpr auto Movement_Ladder = 0x94f240;
		constexpr auto Movement_Noclip = 0x94f9a0;
		constexpr auto Movement_Walking = 0x94ff30;
		constexpr auto GetHeldEntityMovementMultiplier = 0x94e460;
		constexpr auto HandleGrounded = 0x94e7e0;
		constexpr auto HandleRunDuckCrawl = 0x94e960;
		constexpr auto GetForcedDuck = 0x94e370;
		constexpr auto HandleJumping = 0x94e830;
		constexpr auto CanJump = 0x94c7b0;
		constexpr auto BlockJump = 0x94c720;
		constexpr auto BlockSprint = 0x94c760;
		constexpr auto SetKinematic = 0x9519a0;
		constexpr auto ApplyForce = 0x94c600;
		constexpr auto CanSprint = 0x94c8c0;
		constexpr auto Jump = 0x94ef20;
		constexpr auto DoFixedUpdate = 0x94cce0;
		constexpr auto DoStepUp = 0x94d500;
		constexpr auto UpdateVelocity = 0x952400;
		constexpr auto UpdateGravity = 0x9520b0;
		constexpr auto FrameUpdate = 0x94ded0;
		constexpr auto TransformState = 0x951cf0;
		constexpr auto SetParent = 0x9519d0;
		constexpr auto FallVelocity = 0x94de20;
		constexpr auto CurrentVelocity = 0x94cca0;
		constexpr auto CurrentMoveSpeed = 0x94cc50;
		constexpr auto PlayerAttemptedMount = 0x951940;
		constexpr auto PlayerCompletedMount = 0x951970;
		constexpr auto ctor = 0x952fe0;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a12800;
		constexpr auto set_color = 0x1a12da0;
		constexpr auto get_backgroundColor = 0x1a126b0;
		constexpr auto set_backgroundColor = 0x1a12cb0;
		constexpr auto get_contentColor = 0x1a128c0;
		constexpr auto set_contentColor = 0x1a12e50;
		constexpr auto get_changed = 0x1a12790;
		constexpr auto set_changed = 0x1a12d20;
		constexpr auto get_enabled = 0x1a12940;
		constexpr auto set_enabled = 0x1a12ec0;
		constexpr auto get_usePageScrollbars = 0x1a12c40;
		constexpr auto get_blendMaterial = 0x1a12730;
		constexpr auto get_blitMaterial = 0x1a12760;
		constexpr auto get_roundedRectMaterial = 0x1a12a60;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a12a90;
		constexpr auto GrabMouseControl = 0x1a10800;
		constexpr auto HasMouseControl = 0x1a115f0;
		constexpr auto ReleaseMouseControl = 0x1a11d00;
		constexpr auto SetNextControlName = 0x1a11f90;
		constexpr auto InternalRepaintEditorWindow = 0x1a11910;
		constexpr auto cctor = 0x1a123f0;
		constexpr auto get_scrollTroughSide = 0x1a12ac0;
		constexpr auto set_scrollTroughSide = 0x1a13020;
		constexpr auto get_nextScrollStepTime = 0x1a12a00;
		constexpr auto set_nextScrollStepTime = 0x1a12f60;
		constexpr auto set_skin = 0x1a130e0;
		constexpr auto get_skin = 0x1a12be0;
		constexpr auto DoSetSkin = 0x1a0ec80;
		constexpr auto get_matrix = 0x1a12970;
		constexpr auto set_matrix = 0x1a12f00;
		constexpr auto Label = 0x1a11a30;
		constexpr auto DrawTexture = 0x1a0fe10;
		constexpr auto CalculateScaledTextureRects = 0x1a0cfd0;
		constexpr auto Box = 0x1a0c3c0;
		constexpr auto Button = 0x1a0c480;
		constexpr auto PasswordFieldGetStrToShow = 0x1a11bd0;
		constexpr auto DoTextField = 0x1a0f100;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a11030;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a10840;
		constexpr auto Toggle = 0x1a12230;
		constexpr auto SelectionGrid = 0x1a11e30;
		constexpr auto CalcTotalHorizSpacing = 0x1a0cdc0;
		constexpr auto DoControl = 0x1a0e5b0;
		constexpr auto DoLabel = 0x1a0e9f0;
		constexpr auto DoToggle = 0x1a0f2c0;
		constexpr auto DoButton = 0x1a0e480;
		constexpr auto DoButtonGrid = 0x1a0d790;
		constexpr auto CalcMouseRects = 0x1a0c8a0;
		constexpr auto HorizontalSlider = 0x1a11700;
		constexpr auto Slider = 0x1a11fd0;
		constexpr auto BeginGroup = 0x1a0bda0;
		constexpr auto EndGroup = 0x1a107c0;
		constexpr auto get_scrollViewStates = 0x1a12b80;
		constexpr auto CallWindowDelegate = 0x1a0d300;
		constexpr auto get_color_Injected = 0x1a127c0;
		constexpr auto set_color_Injected = 0x1a12d60;
		constexpr auto get_backgroundColor_Injected = 0x1a12670;
		constexpr auto set_backgroundColor_Injected = 0x1a12c70;
		constexpr auto get_contentColor_Injected = 0x1a12880;
		constexpr auto set_contentColor_Injected = 0x1a12e10;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a09900;
		constexpr auto set_rawName = 0x1a09cd0;
		constexpr auto get_font = 0x1a093f0;
		constexpr auto get_imagePosition = 0x1a09430;
		constexpr auto set_alignment = 0x1a09b70;
		constexpr auto get_wordWrap = 0x1a099c0;
		constexpr auto get_contentOffset = 0x1a09320;
		constexpr auto set_contentOffset = 0x1a09c00;
		constexpr auto get_fixedWidth = 0x1a093b0;
		constexpr auto get_fixedHeight = 0x1a09370;
		constexpr auto get_stretchWidth = 0x1a09980;
		constexpr auto set_stretchWidth = 0x1a09d70;
		constexpr auto get_stretchHeight = 0x1a09940;
		constexpr auto set_stretchHeight = 0x1a09d20;
		constexpr auto set_fontSize = 0x1a09c40;
		constexpr auto set_Internal_clipOffset = 0x1a09b30;
		constexpr auto Internal_Create = 0x1a08730;
		constexpr auto Internal_Copy = 0x1a086e0;
		constexpr auto Internal_Destroy = 0x1a08770;
		constexpr auto GetStyleStatePtr = 0x1a08510;
		constexpr auto GetRectOffsetPtr = 0x1a084d0;
		constexpr auto Internal_GetLineHeight = 0x1a08e00;
		constexpr auto Internal_Draw = 0x1a08b80;
		constexpr auto Internal_Draw2 = 0x1a08820;
		constexpr auto Internal_DrawCursor = 0x1a08900;
		constexpr auto Internal_DrawWithTextSelection = 0x1a08a20;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a08cb0;
		constexpr auto Internal_GetCursorStringIndex = 0x1a08da0;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a08eb0;
		constexpr auto Internal_CalcSize = 0x1a07420;
		constexpr auto Internal_CalcSizeWithCon_ints = 0x1a073c0;
		constexpr auto Internal_CalcHeight = 0x1a072e0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a085b0;
		constexpr auto SetMouseTooltip = 0x1a08fb0;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a08c10;
		constexpr auto SetDefaultFont = 0x1a08f20;
		constexpr auto ctor = 0x1a09250;
		constexpr auto Finalize = 0x1a082f0;
		constexpr auto get_name = 0x1a09670;
		constexpr auto set_name = 0x1a09c80;
		constexpr auto get_normal = 0x1a09790;
		constexpr auto get_margin = 0x1a095c0;
		constexpr auto get_padding = 0x1a09850;
		constexpr auto get_lineHeight = 0x1a09510;
		constexpr auto Draw = 0x1a080c0;
		constexpr auto DrawCursor = 0x1a07480;
		constexpr auto DrawWithTextSelection = 0x1a07940;
		constexpr auto op_Implicit = 0x1a09a00;
		constexpr auto get_none = 0x1a096d0;
		constexpr auto GetCursorPixelPosition = 0x1a083f0;
		constexpr auto GetCursorStringIndex = 0x1a08470;
		constexpr auto CalcSize = 0x1a07420;
		constexpr auto CalcSizeWithCon_ints = 0x1a073c0;
		constexpr auto CalcHeight = 0x1a072e0;
		constexpr auto get_isHeightDependantOnWidth = 0x1a09470;
		constexpr auto CalcMinMaxWidth = 0x1a07340;
		constexpr auto ToString = 0x1a09030;
		constexpr auto cctor = 0x1a09140;
		constexpr auto get_contentOffset_Injected = 0x1a092d0;
		constexpr auto set_contentOffset_Injected = 0x1a09bb0;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a09ae0;
		constexpr auto Internal_Draw_Injected = 0x1a08af0;
		constexpr auto Internal_Draw2_Injected = 0x1a087b0;
		constexpr auto Internal_DrawCursor_Injected = 0x1a08890;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a08970;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a08c40;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a08d30;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a08e40;
		constexpr auto Internal_CalcSize_Injected = 0x1a08680;
		constexpr auto Internal_CalcSizeWithCon_ints_Injected = 0x1a08610;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a08550;
		constexpr auto SetMouseTooltip_Injected = 0x1a08f60;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x19f9020;
		constexpr auto get_mousePosition = 0x19f8f50;
		constexpr auto set_mousePosition = 0x19f9330;
		constexpr auto get_delta = 0x19f8cd0;
		constexpr auto get_pointerType = 0x19f8fa0;
		constexpr auto get_button = 0x19f8ac0;
		constexpr auto get_modifiers = 0x19f8ec0;
		constexpr auto set_modifiers = 0x19f92a0;
		constexpr auto get_pressure = 0x19f8fe0;
		constexpr auto get_clickCount = 0x19f8b40;
		constexpr auto get_character = 0x19f8b00;
		constexpr auto set_character = 0x19f90e0;
		constexpr auto get_keyCode = 0x19f8e80;
		constexpr auto set_keyCode = 0x19f9260;
		constexpr auto get_displayIndex = 0x19f8d20;
		constexpr auto set_displayIndex = 0x19f9220;
		constexpr auto get_type = 0x19f90a0;
		constexpr auto set_type = 0x19f9370;
		constexpr auto get_commandName = 0x19f8b80;
		constexpr auto set_commandName = 0x19f9130;
		constexpr auto Internal_Use = 0x19f69a0;
		constexpr auto Internal_Create = 0x19f67a0;
		constexpr auto Internal_Destroy = 0x19f67e0;
		constexpr auto Internal_Copy = 0x19f6760;
		constexpr auto GetTypeForControl = 0x19f6720;
		constexpr auto CopyFromPtr = 0x19f6200;
		constexpr auto PopEvent = 0x19f7c70;
		constexpr auto Internal_SetNativeEvent = 0x19f6960;
		constexpr auto Internal_MakeMasterEventCurrent = 0x19f6820;
		constexpr auto ctor = 0x19f89f0;
		constexpr auto Finalize = 0x19f6510;
		constexpr auto CopyFrom = 0x19f6250;
		constexpr auto get_shift = 0x19f9060;
		constexpr auto get_control = 0x19f8c00;
		constexpr auto get_alt = 0x19f8a80;
		constexpr auto get_command = 0x19f8bc0;
		constexpr auto get_current = 0x19f8c40;
		constexpr auto set_current = 0x19f9180;
		constexpr auto get_isKey = 0x19f8dd0;
		constexpr auto get_isMouse = 0x19f8e20;
		constexpr auto get_isDirectManipulationDevice = 0x19f8d60;
		constexpr auto KeyboardEvent = 0x19f69e0;
		constexpr auto GetHashCode = 0x19f65f0;
		constexpr auto Equals = 0x19f62c0;
		constexpr auto ToString = 0x19f7cb0;
		constexpr auto Use = 0x19f8790;
		constexpr auto get_mousePosition_Injected = 0x19f8f00;
		constexpr auto set_mousePosition_Injected = 0x19f92e0;
		constexpr auto get_delta_Injected = 0x19f8c80;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x2281780;
		constexpr auto GetKeyUpInt = 0x22817c0;
		constexpr auto GetKeyDownInt = 0x2281740;
		constexpr auto GetAxis = 0x22816c0;
		constexpr auto GetAxisRaw = 0x2281680;
		constexpr auto GetButtonDown = 0x2281700;
		constexpr auto GetMouseButton = 0x2281880;
		constexpr auto GetMouseButtonDown = 0x2281800;
		constexpr auto GetMouseButtonUp = 0x2281840;
		constexpr auto GetTouch = 0x2281900;
		constexpr auto GetKey = 0x2281780;
		constexpr auto GetKeyUp = 0x22817c0;
		constexpr auto GetKeyDown = 0x2281740;
		constexpr auto get_anyKey = 0x2281990;
		constexpr auto get_anyKeyDown = 0x2281960;
		constexpr auto get_mousePosition = 0x2281ae0;
		constexpr auto get_mouseScrollDelta = 0x2281b90;
		constexpr auto get_imeCompositionMode = 0x2281a70;
		constexpr auto set_imeCompositionMode = 0x2281de0;
		constexpr auto get_compositionString = 0x2281a40;
		constexpr auto get_compositionCursorPos = 0x2281a00;
		constexpr auto set_compositionCursorPos = 0x2281da0;
		constexpr auto get_mousePresent = 0x2281b20;
		constexpr auto get_touchCount = 0x2281bd0;
		constexpr auto get_touchSupported = 0x2281c00;
		constexpr auto get_touches = 0x2281c30;
		constexpr auto GetTouch_Injected = 0x22818c0;
		constexpr auto get_mousePosition_Injected = 0x2281aa0;
		constexpr auto get_mouseScrollDelta_Injected = 0x2281b50;
		constexpr auto get_compositionCursorPos_Injected = 0x22819c0;
		constexpr auto set_compositionCursorPos_Injected = 0x2281d60;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x539c90;
		constexpr auto Capsule = 0x5398b0;
		constexpr auto Sphere = 0x53b130;
		constexpr auto SphereGizmo = 0x53ae40;
		constexpr auto Line = 0x539f60;
		constexpr auto Arrow = 0x538980;
		constexpr auto ArrowPadded = 0x538280;
		constexpr auto Bounds = 0x538bb0;
		constexpr auto Box = 0x539170;
		constexpr auto Text = 0x53b410;
		constexpr auto ScreenText = 0x53aca0;
		constexpr auto Awake = 0x538b40;
		constexpr auto OnPreRender = 0x53a8c0;
		constexpr auto OnPostRender = 0x53a580;
		constexpr auto OnGUI = 0x53a3b0;
		constexpr auto CreateLineMaterial = 0x539b30;
		constexpr auto get_skin = 0x53b620;
		constexpr auto ctor = 0x53b5b0;
		constexpr auto cctor = 0x2f4fd0;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x18eae50;
		constexpr auto get_whiteTexture = 0x18eaed0;
		constexpr auto get_blackTexture = 0x18eae20;
		constexpr auto Compress = 0x18e9580;
		constexpr auto Internal_CreateImpl = 0x18e9c10;
		constexpr auto Internal_Create = 0x18e9c70;
		constexpr auto get_isReadable = 0x18eae90;
		constexpr auto ApplyImpl = 0x18e93d0;
		constexpr auto ResizeImpl = 0x18ea140;
		constexpr auto SetPixelImpl = 0x18ea480;
		constexpr auto GetPixelImpl = 0x18e97f0;
		constexpr auto GetPixelBilinearImpl = 0x18e9630;
		constexpr auto ResizeWithFormatImpl = 0x18ea190;
		constexpr auto ReadPixelsImpl = 0x18e9f30;
		constexpr auto SetPixelsImpl = 0x18ea680;
		constexpr auto LoadRawTextureDataImpl = 0x18e9d40;
		constexpr auto GetWritableImageData = 0x18e9bd0;
		constexpr auto GetRawImageDataSize = 0x18e9b90;
		constexpr auto set_requestedMipmapLevel = 0x18eaf40;
		constexpr auto set_minimumMipmapLevel = 0x18eaf00;
		constexpr auto ClearRequestedMipmapLevel = 0x18e9540;
		constexpr auto ClearMinimumMipmapLevel = 0x18e9500;
		constexpr auto SetAllPixels32 = 0x18ea360;
		constexpr auto SetBlockOfPixels32 = 0x18ea3c0;
		constexpr auto GetPixels = 0x18e9a90;
		constexpr auto GetPixels32 = 0x18e9990;
		constexpr auto ctor = 0x18eabe0;
		constexpr auto SetPixel = 0x18ea4f0;
		constexpr auto SetPixels = 0x18ea6e0;
		constexpr auto GetPixel = 0x18e9870;
		constexpr auto GetPixelBilinear = 0x18e96b0;
		constexpr auto LoadRawTextureData = 0x18e9da0;
		constexpr auto Apply = 0x18e9450;
		constexpr auto Resize = 0x18ea2c0;
		constexpr auto ReadPixels = 0x18ea070;
		constexpr auto SetPixels32 = 0x18ea360;
		constexpr auto SetPixelImpl_Injected = 0x18ea420;
		constexpr auto GetPixelImpl_Injected = 0x18e9790;
		constexpr auto GetPixelBilinearImpl_Injected = 0x18e95d0;
		constexpr auto ReadPixelsImpl_Injected = 0x18e9ec0;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x1e00940;
		constexpr auto HasFlag = 0x1dffe20;
		constexpr auto SetFlag = 0x1e008d0;
		constexpr auto get_ducked = 0x1e00990;
		constexpr auto set_ducked = 0x1e00a90;
		constexpr auto get_jumped = 0x1e009c0;
		constexpr auto set_jumped = 0x1e00af0;
		constexpr auto get_onground = 0x1e00a00;
		constexpr auto set_onground = 0x1e00b70;
		constexpr auto get_sleeping = 0x1e00a30;
		constexpr auto set_sleeping = 0x1e00bd0;
		constexpr auto get_sprinting = 0x1e00a40;
		constexpr auto set_sprinting = 0x1e00bf0;
		constexpr auto get_onLadder = 0x1e009e0;
		constexpr auto set_onLadder = 0x1e00b30;
		constexpr auto get_flying = 0x1e009a0;
		constexpr auto set_flying = 0x1e00ab0;
		constexpr auto get_aiming = 0x1e00970;
		constexpr auto set_aiming = 0x1e00a50;
		constexpr auto get_prone = 0x1e00a10;
		constexpr auto set_prone = 0x1e00b90;
		constexpr auto get_mounted = 0x1e009d0;
		constexpr auto set_mounted = 0x1e00b10;
		constexpr auto get_relaxed = 0x1e00a20;
		constexpr auto set_relaxed = 0x1e00bb0;
		constexpr auto get_crawling = 0x1e00980;
		constexpr auto set_crawling = 0x1e00a70;
		constexpr auto get_onPhone = 0x1e009f0;
		constexpr auto set_onPhone = 0x1e00b50;
		constexpr auto get_headLook = 0x1e009b0;
		constexpr auto set_headLook = 0x1e00ad0;
		constexpr auto Equal = 0x1dffac0;
		constexpr auto ResetToPool = 0x1dfff00;
		constexpr auto Dispose = 0x1dffa40;
		constexpr auto EnterPool = 0xb5b8a0;
		constexpr auto LeavePool = 0xb5b8d0;
		constexpr auto CopyTo = 0x1dfe720;
		constexpr auto Copy = 0x1dfe770;
		constexpr auto Deserialize = 0x1dff7c0;
		constexpr auto DeserializeLengthDelimited = 0x1dfe810;
		constexpr auto DeserializeLength = 0x1dfeea0;
		constexpr auto FromProto = 0x1dffbd0;
		constexpr auto WriteToStream = 0x1e00900;
		constexpr auto WriteToStreamDelta = 0x1e00920;
		constexpr auto ReadFromStream = 0x1dffe30;
		constexpr auto SerializeDelta = 0x1dfffb0;
		constexpr auto Serialize = 0x1e00610;
		constexpr auto ToProtoBytes = 0x1e008f0;
		constexpr auto ToProto = 0x1e00900;
		constexpr auto SerializeToBytes = 0x1e00500;
		constexpr auto SerializeLengthDelimited = 0x1e00450;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x1ecad40;
		constexpr auto Dispose = 0x1eca9e0;
		constexpr auto EnterPool = 0xb5b8a0;
		constexpr auto LeavePool = 0xb5b8d0;
		constexpr auto CopyTo = 0x1ec9870;
		constexpr auto Copy = 0x1ec98b0;
		constexpr auto Deserialize = 0x1ec9fe0;
		constexpr auto DeserializeLengthDelimited = 0x1ec9950;
		constexpr auto DeserializeLength = 0x1ec9f50;
		constexpr auto FromProto = 0x1ecab10;
		constexpr auto WriteToStream = 0x1ecb750;
		constexpr auto WriteToStreamDelta = 0x1ecb770;
		constexpr auto ReadFromStream = 0x1ecad20;
		constexpr auto SerializeDelta = 0x1ecaea0;
		constexpr auto Serialize = 0x1ecb4b0;
		constexpr auto ToProtoBytes = 0x1ecb740;
		constexpr auto ToProto = 0x1ecb750;
		constexpr auto SerializeToBytes = 0x1ecb3a0;
		constexpr auto SerializeLengthDelimited = 0x1ecb2f0;
		constexpr auto ctor = 0xb5c160;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previou_veledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x570970;
		constexpr auto get_isAuthoritative = 0x575720;
		constexpr auto get_isAlive = 0x5756e0;
		constexpr auto Retire = 0x5744d0;
		constexpr auto Cleanup = 0x570ec0;
		constexpr auto AdjustVelocity = 0x570700;
		constexpr auto InitializeVelocity = 0x573710;
		constexpr auto OnDisable = 0x573980;
		constexpr auto Update = 0x575340;
		constexpr auto SetEffectScale = 0x574aa0;
		constexpr auto DoFlybySound = 0x5710c0;
		constexpr auto CalculateEffectScale = 0x570e20;
		constexpr auto UpdateVelocity = 0x575060;
		constexpr auto DoVelocityUpdate = 0x572f20;
		constexpr auto DoMovement = 0x571de0;
		constexpr auto DoWaterHit = 0x573300;
		constexpr auto DoRicochet = 0x572b00;
		constexpr auto DoHit = 0x5716d0;
		constexpr auto AdditiveImpactEffect = 0x2f4fd0;
		constexpr auto Reflect = 0x573c50;
		constexpr auto Refract = 0x573fa0;
		constexpr auto RandomRotation = 0x573b50;
		constexpr auto Launch = 0x5738f0;
		constexpr auto FleshMaterialID = 0x573610;
		constexpr auto WaterMaterialID = 0x575440;
		constexpr auto IsWaterMaterial = 0x5737c0;
		constexpr auto ShouldStopProjectile = 0x574fa0;
		constexpr auto ctor = 0x575540;
		constexpr auto cctor = 0x2f4fd0;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xa08d50;
		constexpr auto get_worldStandingPosition = 0xa08f40;
		constexpr auto get_worldCrouchedPosition = 0xa08c50;
		constexpr auto get_worldCrawlingPosition = 0xa08b50;
		constexpr auto get_position = 0xa08610;
		constexpr auto get_BodyLeanOffset = 0xa07cd0;
		constexpr auto get_center = 0xa08030;
		constexpr auto get_offset = 0xa08350;
		constexpr auto get_rotation = 0xa08aa0;
		constexpr auto set_rotation = 0xa090a0;
		constexpr auto get_bodyRotation = 0xa07f50;
		constexpr auto set_bodyRotation = 0xa09070;
		constexpr auto get_headAngles = 0xa08330;
		constexpr auto set_headAngles = 0xa09080;
		constexpr auto get_rotationLook = 0xa08a90;
		constexpr auto set_rotationLook = 0xa09090;
		constexpr auto get_parentRotation = 0xa08480;
		constexpr auto get_canUpdateViewAngles = 0xa07f60;
		constexpr auto get_IsAltLookingLegsThreshold = 0xa07f40;
		constexpr auto set_IsAltLookingLegsThreshold = 0xa09060;
		constexpr auto FrameUpdate = 0xa06890;
		constexpr auto UpdateAltLegsThreshold = 0xa07900;
		constexpr auto UpdateCamera = 0xa07970;
		constexpr auto DoFirstPersonCamera = 0xa04970;
		constexpr auto DoInEyeCamera = 0xa04fc0;
		constexpr auto DoThirdPersonCamera = 0xa05310;
		constexpr auto ApplyCameraMoves = 0xa04340;
		constexpr auto MovementForward = 0xa07580;
		constexpr auto MovementRight = 0xa07740;
		constexpr auto BodyRay = 0xa04520;
		constexpr auto BodyForward = 0xa043d0;
		constexpr auto BodyRight = 0xa046d0;
		constexpr auto BodyUp = 0xa04820;
		constexpr auto HeadRay = 0xa071c0;
		constexpr auto HeadForward = 0xa070d0;
		constexpr auto HeadRight = 0xa073a0;
		constexpr auto HeadUp = 0xa07490;
		constexpr auto GetLookRotation = 0xa06f50;
		constexpr auto GetAimRotation = 0xa06e90;
		constexpr auto ctor = 0xa07c10;
		constexpr auto cctor = 0xa07b10;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x8397a0;
		constexpr auto OnDisable = 0x839b10;
		constexpr auto Holster = 0x839aa0;
		constexpr auto Clear = 0x839630;
		constexpr auto OnFrame = 0x839b80;
		constexpr auto Play = 0x839ce0;
		constexpr auto ResetTrigger = 0x839e10;
		constexpr auto Trigger = 0x83a120;
		constexpr auto CrossFade = 0x839700;
		constexpr auto SetBool = 0x839f40;
		constexpr auto SetFloat = 0x83a080;
		constexpr auto set_ironSights = 0x83a240;
		constexpr auto ctor = 0x2f8ac0;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x360;
		constexpr auto arrowBack = 0x364;
		constexpr auto swapArrows = 0x368;
		constexpr auto wasAiming = 0x370;

		constexpr auto OnRpcMessage = 0x4e9ec0;
		constexpr auto ClientInit = 0x4e9620;
		constexpr auto OnSignal = 0x4e9fb0;
		constexpr auto UpdatePullbackThink = 0x4ea400;
		constexpr auto CancelPullbackThink = 0x4e95b0;
		constexpr auto PullbackThink = 0x4ea2c0;
		constexpr auto OnInput = 0x4e9b40;
		constexpr auto OnHolstered = 0x4e9b00;
		constexpr auto DoAttack = 0x4e9690;
		constexpr auto IsAiming = 0x4e9930;
		constexpr auto OnViewmodelEvent = 0x4ea120;
		constexpr auto OnFrame = 0x4e99d0;
		constexpr auto PostNetworkUpdate = 0x4ea190;
		constexpr auto TryReload = 0x4ea390;
		constexpr auto ProcessSpectatorViewmodel = 0x4ea230;
		constexpr auto ctor = 0x2f4740;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f0;
		constexpr auto repeatDelay = 0x1f4;
		constexpr auto animationDelay = 0x1f8;
		constexpr auto effectiveRange = 0x1fc;
		constexpr auto npcDamageScale = 0x200;
		constexpr auto attackLengthMin = 0x204;
		constexpr auto attackLengthMax = 0x208;
		constexpr auto attackSpacing = 0x20c;
		constexpr auto aiAimSwayOffset = 0x210;
		constexpr auto aiAimCone = 0x214;
		constexpr auto aiOnlyInRange = 0x218;
		constexpr auto CloseRangeAddition = 0x21c;
		constexpr auto MediumRangeAddition = 0x220;
		constexpr auto LongRangeAddition = 0x224;
		constexpr auto CanUseAtMediumRange = 0x228;
		constexpr auto CanUseAtLongRange = 0x229;
		constexpr auto reloadSounds = 0x230;
		constexpr auto thirdPersonMeleeSound = 0x238;
		constexpr auto recoilCompDelayOverride = 0x240;
		constexpr auto wantsRecoilComp = 0x244;
		constexpr auto nextAttackTime = 0x248;
		constexpr auto lastTickTime = 0x24c;
		constexpr auto nextTickTime = 0x250;
		constexpr auto timeSinceDeploy = 0x254;
		constexpr auto lastRecoilCompTime = 0x258;
		constexpr auto startAimingDirection = 0x25c;
		constexpr auto wasDoingRecoilComp = 0x268;
		constexpr auto reductionSpeed = 0x26c;

		constexpr auto GetInheritedVelocity = 0x8773b0;
		constexpr auto get_NextAttackTime = 0x877890;
		constexpr auto GetAttackStats = 0x2f4fd0;
		constexpr auto StartAttackCooldownRaw = 0x8775d0;
		constexpr auto StartAttackCooldown = 0x877600;
		constexpr auto ResetAttackCooldown = 0x8775c0;
		constexpr auto HasAttackCooldown = 0x877420;
		constexpr auto GetAttackCooldown = 0x8772b0;
		constexpr auto GetAttackIdle = 0x877330;
		constexpr auto CalculateCooldownTime = 0x876860;
		constexpr auto IsFullyDeployed = 0x877450;
		constexpr auto ProcessInputTime = 0x8774f0;
		constexpr auto OnInput = 0x877490;
		constexpr auto OnDeploy = 0x877470;
		constexpr auto RecoilCompReady = 0x877540;
		constexpr auto AddPunch = 0x8766b0;
		constexpr auto DoRecoilCompensation = 0x8769a0;
		constexpr auto ctor = 0x8777a0;
		constexpr auto cctor = 0x877730;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto _pendingFileRequests = 0xa0;
		constexpr auto updateParentingAction = 0xa8;
		constexpr auto addedToParentEntity = 0xb0;
		constexpr auto itemSkin = 0xb8;
		constexpr auto entitySlots = 0xc0;
		constexpr auto triggers = 0xc8;
		constexpr auto isVisible = 0xd0;
		constexpr auto isAnimatorVisible = 0xd1;
		constexpr auto isShadowVisible = 0xd2;
		constexpr auto localOccludee = 0xd8;
		constexpr auto Weightk__BackingField = 0xf8;
		constexpr auto bounds = 0xfc;
		constexpr auto impactEffect = 0x118;
		constexpr auto enableSaving = 0x120;
		constexpr auto syncPosition = 0x121;
		constexpr auto model = 0x128;
		constexpr auto flags = 0x130;
		constexpr auto parentBone = 0x134;
		constexpr auto skinID = 0x138;
		constexpr auto _components = 0x140;
		constexpr auto HasBrain = 0x148;
		constexpr auto _name = 0x150;
		constexpr auto OwnerIDk__BackingField = 0x158;

		constexpr auto OnRpcMessage = 0x890a50;
		constexpr auto GetEntityMenu = 0x88bf80;
		constexpr auto GetMenuOptions = 0x2f4fd0;
		constexpr auto get_HasMenuOptions = 0x2f4190;
		constexpr auto GetItemOptions = 0x88c630;
		constexpr auto GetMovementModify = 0x88d080;
		constexpr auto GetExtrapolationTime = 0x88c0c0;
		constexpr auto GetInterpolationDelay = 0x88c480;
		constexpr auto GetInterpolationInertia = 0x88c510;
		constexpr auto GetInterpolationSmoothing = 0x88c5a0;
		constexpr auto GetAngularVelocityClient = 0x88ba20;
		constexpr auto GetLocalVelocityClient = 0x88c880;
		constexpr auto DrawInterpolationState = 0x889f10;
		constexpr auto LerpIdleDisable = 0x88f3d0;
		constexpr auto ClientInit = 0x889180;
		constexpr auto ClientOnEnable = 0x889230;
		constexpr auto OnPositionalFromNetwork = 0x8906f0;
		constexpr auto StartLerping = 0x893aa0;
		constexpr auto StopLerping = 0x893c20;
		constexpr auto ShouldLerp = 0x893690;
		constexpr auto SetNetworkPosition = 0x893180;
		constexpr auto SetNetworkRotation = 0x8932f0;
		constexpr auto DoDestroyEffects = 0x889ef0;
		constexpr auto SpawnGibs = 0x893790;
		constexpr auto DoNetworkDestroy = 0x304620;
		constexpr auto PostNetworkUpdate = 0x891e10;
		constexpr auto OnBecameRagdoll = 0x890430;
		constexpr auto GetMenuInformation = 0x88ca00;
		constexpr auto HideMenuItems = 0x88ddd0;
		constexpr auto GetMenuItems = 0x88ccf0;
		constexpr auto OnUse = 0x891c00;
		constexpr auto OnUseHeld = 0x8919e0;
		constexpr auto OnUseStopped = 0x2f4fd0;
		constexpr auto OnRendered = 0x2f4fd0;
		constexpr auto DoClientDestroy = 0x889c50;
		constexpr auto GetEyeTransform = 0x88c150;
		constexpr auto NeedsCrosshair = 0x890320;
		constexpr auto AlwaysShowCrosshair = 0x2f4190;
		constexpr auto ShouldDestroyWithGroup = 0x8935e0;
		constexpr auto DetachEffects = 0x889840;
		constexpr auto OnVoiceData = 0x2f4fd0;
		constexpr auto LookingAtTick = 0x2f4fd0;
		constexpr auto get_RealisticMass = 0x3218a0;
		constexpr auto OnCollision = 0x8904e0;
		constexpr auto ReceiveCollisionMessages = 0x891f00;
		constexpr auto DebugClient = 0x2f4fd0;
		constexpr auto OnDebugStart = 0x890530;
		constexpr auto DebugText = 0x889760;
		constexpr auto HasFlag = 0x88dd90;
		constexpr auto ParentHasFlag = 0x891d70;
		constexpr auto SetFlag = 0x892fb0;
		constexpr auto IsOn = 0x88e400;
		constexpr auto IsOpen = 0x88e410;
		constexpr auto IsOnFire = 0x88e3f0;
		constexpr auto IsLocked = 0x88e140;
		constexpr auto IsDebugging = 0x88df50;
		constexpr auto IsDisabled = 0x88df60;
		constexpr auto IsBroken = 0x88df40;
		constexpr auto IsBusy = 0x88ddd0;
		constexpr auto GetLogColor = 0x88c9b0;
		constexpr auto OnFlagsChanged = 0x8905f0;
		constexpr auto IsOccupied = 0x88e240;
		constexpr auto FindLink = 0x88abe0;
		constexpr auto EntityLinkBroadcast = 0x88a6c0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x891f90;
		constexpr auto GetEntityLinks = 0x88bf40;
		constexpr auto LinkToEntity = 0x88f400;
		constexpr auto LinkToNeighbours = 0x88f660;
		constexpr auto InitEntityLinks = 0x88dde0;
		constexpr auto FreeEntityLinks = 0x88b940;
		constexpr auto RefreshEntityLinks = 0x892000;
		constexpr auto RequestFileFromServer = 0x892880;
		constexpr auto CL_ReceiveFileRequest = 0x888e90;
		constexpr auto CompletePendingFileRequests = 0x889430;
		constexpr auto UpdateChildren = 0x893de0;
		constexpr auto UpdateParenting = 0x894b50;
		constexpr auto SetParentTransform = 0x8933c0;
		constexpr auto UpdateDisableState = 0x894150;
		constexpr auto HasClientTransformOffset = 0x88dbf0;
		constexpr auto RemoveClientTransformOffset = 0x892310;
		constexpr auto AddClientTransformOffset = 0x888850;
		constexpr auto OnParentChangingClient = 0x2f4fd0;
		constexpr auto GetBuildingPrivilege = 0x88bed0;
		constexpr auto ServerRPC = 0x892c70;
		constexpr auto ServerRPCStart = 0x892ac0;
		constexpr auto ServerRPCSend = 0x892a50;
		constexpr auto CL_RPCMessage = 0x888ba0;
		constexpr auto SendSignalBroadcast = 0x8929a0;
		constexpr auto SignalFromServerEx = 0x8936b0;
		constexpr auto SignalFromServer = 0x893740;
		constexpr auto OnSignal = 0x2f4fd0;
		constexpr auto OnSkinChanged = 0x891650;
		constexpr auto OnSkinRefreshStart = 0x8919c0;
		constexpr auto OnSkinRefreshEnd = 0x8919a0;
		constexpr auto PreProcess = 0x891e30;
		constexpr auto HasAnySlot = 0x88db10;
		constexpr auto GetSlot = 0x88d690;
		constexpr auto GetSlotAnchorName = 0x88d550;
		constexpr auto GetSlotAnchor = 0x88d5e0;
		constexpr auto HasSlot = 0x2f4190;
		constexpr auto get_Traits = 0x2fc9e0;
		constexpr auto Ha_it = 0x88dda0;
		constexpr auto HasAnyTrait = 0x88dbc0;
		constexpr auto EnterTrigger = 0x88a610;
		constexpr auto LeaveTrigger = 0x88f330;
		constexpr auto RemoveFromTriggers = 0x892370;
		constexpr auto ForceUpdateTriggersAction = 0x88aec0;
		constexpr auto ForceUpdateTriggers = 0x88aef0;
		constexpr auto MakeVisible = 0x890300;
		constexpr auto UpdateCullingSpheres = 0x893fd0;
		constexpr auto RegisterForCulling = 0x8920e0;
		constexpr auto OnVisibilityChanged = 0x2f4fd0;
		constexpr auto UnregisterFromCulling = 0x893d60;
		constexpr auto UpdateCullingBounds = 0x893f00;
		constexpr auto CheckVisibility = 0x889160;
		constexpr auto CalcEntityVisUpdateRate = 0x889040;
		constexpr auto DebugDrawCullingBounds = 0x889690;
		constexpr auto get_Weight = 0x895340;
		constexpr auto set_Weight = 0x895360;
		constexpr auto get_Components = 0x8952c0;
		constexpr auto ToPlayer = 0x2fc9e0;
		constexpr auto get_IsNpc = 0x2f4190;
		constexpr auto InitShared = 0x88df20;
		constexpr auto DestroyShared = 0x889820;
		constexpr auto ResetState = 0x892930;
		constexpr auto InheritedVelocityScale = 0x2fcd90;
		constexpr auto GetInheritedProjectileVelocity = 0x88c2d0;
		constexpr auto GetInheritedThrowVelocity = 0x88c450;
		constexpr auto GetInheritedDropVelocity = 0x88c1f0;
		constexpr auto GetParentVelocity = 0x88d290;
		constexpr auto GetWorldVelocity = 0x88d6f0;
		constexpr auto GetLocalVelocity = 0x88c910;
		constexpr auto GetAngularVelocity = 0x88bab0;
		constexpr auto WorldSpaceBounds = 0x894ff0;
		constexpr auto PivotPoint = 0x32d430;
		constexpr auto CenterPoint = 0x889120;
		constexpr auto ClosestPoint = 0x889380;
		constexpr auto TriggerPoint = 0x889120;
		constexpr auto Distance = 0x889b10;
		constexpr auto SqrDistance = 0x893960;
		constexpr auto Distance2D = 0x889970;
		constexpr auto SqrDistance2D = 0x8937c0;
		constexpr auto IsVisible = 0x88ef70;
		constexpr auto IsVisibleSpecificLayers = 0x88e920;
		constexpr auto IsVisibleAndCanSee = 0x88e710;
		constexpr auto IsOlderThan = 0x88e350;
		constexpr auto IsOutside = 0x88e420;
		constexpr auto WaterFactor = 0x894b60;
		constexpr auto AirFactor = 0x8888f0;
		constexpr auto WaterTestFromVolumes = 0x894d30;
		constexpr auto IsInWaterVolume = 0x88e000;
		constexpr auto BlocksWaterFor = 0x2f4190;
		constexpr auto Health = 0x2fcd90;
		constexpr auto MaxHealth = 0x2fcd90;
		constexpr auto MaxVelocity = 0x2fcd90;
		constexpr auto BoundsPadding = 0x888930;
		constexpr auto PenetrationResistance = 0x3218a0;
		constexpr auto GetImpactEffect = 0x88c1e0;
		constexpr auto OnAttacked = 0x2f4fd0;
		constexpr auto GetItem = 0x2fc9e0;
		constexpr auto GiveItem = 0x88dae0;
		constexpr auto CanBeLooted = 0x2f6d70;
		constexpr auto GetEntity = 0x326fb0;
		constexpr auto ToString = 0x893c70;
		constexpr auto Categorize = 0x8890f0;
		constexpr auto Log = 0x88fe50;
		constexpr auto SetModel = 0x8930d0;
		constexpr auto GetModel = 0x5ab6f0;
		constexpr auto GetBones = 0x88bb50;
		constexpr auto FindBone = 0x88aa70;
		constexpr auto FindBoneID = 0x88a990;
		constexpr auto FindClosestBone = 0x88ab20;
		constexpr auto get_OwnerID = 0x895330;
		constexpr auto set_OwnerID = 0x895350;
		constexpr auto ShouldBlockProjectiles = 0x2f6d70;
		constexpr auto ShouldInheritNetworkGroup = 0x2f6d70;
		constexpr auto SupportsChildDeployables = 0x2f6d70;
		constexpr auto BroadcastEntityMessage = 0x888940;
		constexpr auto OnEntityMessage = 0x2f4fd0;
		constexpr auto Load = 0x88f950;
		constexpr auto ctor = 0x8951b0;
		constexpr auto cctor = 0x895130;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x2102320;
		constexpr auto get_deltaTime = 0x2102170;
		constexpr auto get_fixedTime = 0x21021d0;
		constexpr auto get_unscaledTime = 0x2102380;
		constexpr auto get_unscaledDeltaTime = 0x2102350;
		constexpr auto get_fixedDeltaTime = 0x21021a0;
		constexpr auto set_fixedDeltaTime = 0x21023b0;
		constexpr auto get_maximumDeltaTime = 0x2102230;
		constexpr auto set_maximumDeltaTime = 0x21023f0;
		constexpr auto get_smoothDeltaTime = 0x21022c0;
		constexpr auto get_timeScale = 0x21022f0;
		constexpr auto set_timeScale = 0x2102430;
		constexpr auto get_frameCount = 0x2102200;
		constexpr auto get_renderedFrameCount = 0x2102290;
		constexpr auto get_realtimeSinceStartup = 0x2102260;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x220db80;
		constexpr auto get_queriesHitBackfaces = 0x220dbc0;
		constexpr auto set_queriesHitBackfaces = 0x220dc30;
		constexpr auto get_defaultPhysicsScene = 0x220db00;
		constexpr auto IgnoreCollision = 0x220a3b0;
		constexpr auto Raycast = 0x220c320;
		constexpr auto Linecast = 0x220a4f0;
		constexpr auto CapsuleCast = 0x2209bf0;
		constexpr auto SphereCast = 0x220d590;
		constexpr auto BoxCast = 0x2209630;
		constexpr auto Internal_RaycastAll = 0x220a480;
		constexpr auto RaycastAll = 0x220b060;
		constexpr auto RaycastNonAlloc = 0x220b780;
		constexpr auto Query_SphereCastAll = 0x220af00;
		constexpr auto SphereCastAll = 0x220d000;
		constexpr auto SyncTransforms = 0x220da60;
		constexpr auto get_autoSyncTransforms = 0x220da90;
		constexpr auto set_autoSyncTransforms = 0x220dbf0;
		constexpr auto OverlapSphereNonAlloc = 0x220add0;
		constexpr auto CheckSphere_Internal = 0x220a1d0;
		constexpr auto CheckSphere = 0x220a240;
		constexpr auto CapsuleCastNonAlloc = 0x2209990;
		constexpr auto SphereCastNonAlloc = 0x220d190;
		constexpr auto CheckCapsule_Internal = 0x2209f30;
		constexpr auto CheckCapsule = 0x2209fa0;
		constexpr auto CheckBox_Internal = 0x2209d70;
		constexpr auto CheckBox = 0x2209de0;
		constexpr auto OverlapBox_Internal = 0x220aab0;
		constexpr auto OverlapBox = 0x220ab20;
		constexpr auto OverlapBoxNonAlloc = 0x220a950;
		constexpr auto OverlapCapsuleNonAlloc = 0x220ace0;
		constexpr auto get_gravity_Injected = 0x220db40;
		constexpr auto get_defaultPhysicsScene_Injected = 0x220dac0;
		constexpr auto Internal_RaycastAll_Injected = 0x220a410;
		constexpr auto Query_SphereCastAll_Injected = 0x220ae90;
		constexpr auto CheckSphere_Internal_Injected = 0x220a160;
		constexpr auto CheckCapsule_Internal_Injected = 0x2209ec0;
		constexpr auto CheckBox_Internal_Injected = 0x2209d00;
		constexpr auto OverlapBox_Internal_Injected = 0x220aa40;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x872e40;
		constexpr auto LookupNameLower = 0x872b80;
		constexpr auto LookupNameUpper = 0x872ce0;
		constexpr auto GetName = 0x872ac0;
		constexpr auto GetNameLower = 0x872940;
		constexpr auto GetNameUpper = 0x872a00;
		constexpr auto cctor = 0x872f80;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x17fd380;
		constexpr auto get_gameObject = 0x17fd340;
		constexpr auto GetComponent = 0x17fcf20;
		constexpr auto GetComponentFastPath = 0x17fcdb0;
		constexpr auto GetComponentInChildren = 0x17fce10;
		constexpr auto GetComponentsInChildren = 0x17fd000;
		constexpr auto GetComponentInParent = 0x17fcea0;
		constexpr auto GetComponents = 0x17fd060;
		constexpr auto GetComponentsForListInternal = 0x17fcfa0;
		constexpr auto CompareTag = 0x17fcd30;
		constexpr auto SendMessageUpwards = 0x17fd150;
		constexpr auto SendMessage = 0x17fd290;
		constexpr auto BroadcastMessage = 0x17fccc0;
		constexpr auto ctor = 0x17f78d0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x1899af0;
		constexpr auto get_position = 0x21051c0;
		constexpr auto set_position = 0x2105b40;
		constexpr auto get_localPosition = 0x2104e90;
		constexpr auto set_localPosition = 0x21058b0;
		constexpr auto get_eulerAngles = 0x2104b90;
		constexpr auto set_eulerAngles = 0x2105600;
		constexpr auto get_localEulerAngles = 0x2104db0;
		constexpr auto set_localEulerAngles = 0x21057b0;
		constexpr auto get_right = 0x2105210;
		constexpr auto set_right = 0x2105b90;
		constexpr auto get_up = 0x2105400;
		constexpr auto set_up = 0x2105d80;
		constexpr auto get_forward = 0x2104c20;
		constexpr auto set_forward = 0x21056b0;
		constexpr auto get_rotation = 0x21053b0;
		constexpr auto set_rotation = 0x2105d30;
		constexpr auto get_localRotation = 0x2104f30;
		constexpr auto set_localRotation = 0x2105950;
		constexpr auto get_localScale = 0x2104fd0;
		constexpr auto set_localScale = 0x21059f0;
		constexpr auto get_parent = 0x21035b0;
		constexpr auto set_parent = 0x2105a40;
		constexpr auto get_parentInternal = 0x21035b0;
		constexpr auto set_parentInternal = 0x2104590;
		constexpr auto GetParent = 0x21035b0;
		constexpr auto SetParent = 0x2104590;
		constexpr auto get_worldToLocalMatrix = 0x21055a0;
		constexpr auto get_localToWorldMatrix = 0x2105070;
		constexpr auto SetPositionAndRotation = 0x2104640;
		constexpr auto Translate = 0x2104980;
		constexpr auto Rotate = 0x2103fa0;
		constexpr auto RotateAroundInternal = 0x2103d00;
		constexpr auto RotateAround = 0x2103d60;
		constexpr auto LookAt = 0x2103b30;
		constexpr auto Internal_LookAt = 0x21036d0;
		constexpr auto TransformDirection = 0x2104740;
		constexpr auto InverseTransformDirection = 0x2103790;
		constexpr auto TransformVector = 0x21048c0;
		constexpr auto InverseTransformVector = 0x2103910;
		constexpr auto TransformPoint = 0x2104800;
		constexpr auto InverseTransformPoint = 0x2103850;
		constexpr auto get_root = 0x21035f0;
		constexpr auto GetRoot = 0x21035f0;
		constexpr auto get_childCount = 0x2104b50;
		constexpr auto DetachChildren = 0x21033c0;
		constexpr auto SetAsFirstSibling = 0x21044b0;
		constexpr auto SetAsLastSibling = 0x21044f0;
		constexpr auto SetSiblingIndex = 0x21046a0;
		constexpr auto GetSiblingIndex = 0x2103630;
		constexpr auto FindRelativeTransformWithPath = 0x2103400;
		constexpr auto Find = 0x2103460;
		constexpr auto get_lossyScale = 0x2105120;
		constexpr auto IsChildOf = 0x2103970;
		constexpr auto get_hasChanged = 0x2104d70;
		constexpr auto set_hasChanged = 0x2105760;
		constexpr auto GetEnumerator = 0x2103540;
		constexpr auto GetChild = 0x2103500;
		constexpr auto get_position_Injected = 0x2105170;
		constexpr auto set_position_Injected = 0x2105af0;
		constexpr auto get_localPosition_Injected = 0x2104e40;
		constexpr auto set_localPosition_Injected = 0x2105860;
		constexpr auto get_rotation_Injected = 0x2105360;
		constexpr auto set_rotation_Injected = 0x2105ce0;
		constexpr auto get_localRotation_Injected = 0x2104ee0;
		constexpr auto set_localRotation_Injected = 0x2105900;
		constexpr auto get_localScale_Injected = 0x2104f80;
		constexpr auto set_localScale_Injected = 0x21059a0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x2105550;
		constexpr auto get_localToWorldMatrix_Injected = 0x2105020;
		constexpr auto SetPositionAndRotation_Injected = 0x21045e0;
		constexpr auto RotateAroundInternal_Injected = 0x2103ca0;
		constexpr auto Internal_LookAt_Injected = 0x2103670;
		constexpr auto TransformDirection_Injected = 0x21046e0;
		constexpr auto InverseTransformDirection_Injected = 0x2103730;
		constexpr auto TransformVector_Injected = 0x2104860;
		constexpr auto InverseTransformVector_Injected = 0x21038b0;
		constexpr auto TransformPoint_Injected = 0x21047a0;
		constexpr auto InverseTransformPoint_Injected = 0x21037f0;
		constexpr auto get_lossyScale_Injected = 0x21050d0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x55f3e0;
		constexpr auto Trace = 0x55fce0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x6e6750;
		constexpr auto HitNormalWorld = 0x6e6630;
		constexpr auto BuildAttackMessage = 0x6e5da0;
		constexpr auto Clear = 0x6e6550;
		constexpr auto ctor = 0x304620;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x189fe80;
		constexpr auto Inverse = 0x18a0270;
		constexpr auto Slerp = 0x18a0cf0;
		constexpr auto SlerpUnclamped = 0x18a0bd0;
		constexpr auto Lerp = 0x18a04a0;
		constexpr auto LerpUnclamped = 0x18a0380;
		constexpr auto Internal_FromEulerRad = 0x189ffe0;
		constexpr auto Internal_ToEulerRad = 0x18a0190;
		constexpr auto AngleAxis = 0x189f860;
		constexpr auto LookRotation = 0x18a0700;
		constexpr auto ctor = 0xf0af0;
		constexpr auto get_identity = 0x18a11f0;
		constexpr auto op_Multiply = 0x18a1610;
		constexpr auto IsEqualUsingDot = 0x18a0300;
		constexpr auto op_Equality = 0x18a1260;
		constexpr auto op_Inequality = 0x18a1320;
		constexpr auto Dot = 0x189fa20;
		constexpr auto SetLookRotation = 0x21a3f0;
		constexpr auto Angle = 0x189f900;
		constexpr auto Internal_MakePositive = 0x18a0070;
		constexpr auto get_eulerAngles = 0x21a510;
		constexpr auto Euler = 0x189fb50;
		constexpr auto RotateTowards = 0x18a07a0;
		constexpr auto GetHashCode = 0x21a380;
		constexpr auto Equals = 0x21a2a0;
		constexpr auto ToString = 0x21a500;
		constexpr auto cctor = 0x18a0fe0;
		constexpr auto FromToRotation_Injected = 0x189fe20;
		constexpr auto Inverse_Injected = 0x18a0220;
		constexpr auto Slerp_Injected = 0x18a0c80;
		constexpr auto SlerpUnclamped_Injected = 0x18a0b60;
		constexpr auto Lerp_Injected = 0x18a0430;
		constexpr auto LerpUnclamped_Injected = 0x18a0310;
		constexpr auto Internal_FromEulerRad_Injected = 0x189ff90;
		constexpr auto Internal_ToEulerRad_Injected = 0x18a0140;
		constexpr auto AngleAxis_Injected = 0x189f800;
		constexpr auto LookRotation_Injected = 0x18a0550;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x559da0;
		constexpr auto CheckCapsule = 0x5595b0;
		constexpr auto CheckOBB = 0x559c70;
		constexpr auto CheckBounds = 0x559450;
		constexpr auto CheckInsideNonConvexMesh = 0x5598c0;
		constexpr auto CheckInsideAnyCollider = 0x559730;
		constexpr auto OverlapSphere = 0x55bc20;
		constexpr auto CapsuleSweep = 0x5591b0;
		constexpr auto OverlapCapsule = 0x55b9a0;
		constexpr auto OverlapOBB = 0x55bad0;
		constexpr auto OverlapBounds = 0x55b800;
		constexpr auto BufferToList = 0x559010;
		constexpr auto HitBufferToList = 0x559fe0;
		constexpr auto Trace = 0x55c2d0;
		constexpr auto TraceAll = 0x55c1f0;
		constexpr auto TraceAllUnordered = 0x55bf00;
		constexpr auto LineOfSightRadius = 0x55ac70;
		constexpr auto LineOfSight = 0x55b1f0;
		constexpr auto LineOfSightInternal = 0x55a150;
		constexpr auto Verify = 0x55c4e0;
		constexpr auto CompareEntity = 0x559e60;
		constexpr auto HandleTerrainCollision = 0x559ed0;
		constexpr auto Sort = 0x55be00;
		constexpr auto cctor = 0x55c790;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xbd0310;
		constexpr auto Test = 0xbd24c0;
		constexpr auto GetWaterDepth = 0xbd0be0;
		constexpr auto GetOverallWaterDepth = 0xbd0a90;
		constexpr auto GetBuoyancyWaterInfo = 0xbd04f0;
		constexpr auto GetWaterInfo = 0xbd0f70;
		constexpr auto GetWaterInfoFromVolumes = 0xbd0d20;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x1622c00;
		constexpr auto Asin = 0x1622c10;
		constexpr auto Atan = 0x1622c30;
		constexpr auto Atan2 = 0x1622c20;
		constexpr auto Ceiling = 0x1622c40;
		constexpr auto Cos = 0x1622c50;
		constexpr auto Cosh = 0x1622c60;
		constexpr auto Floor = 0x1622c90;
		constexpr auto InternalRound = 0x1622ca0;
		constexpr auto InternalTruncate = 0x1622f00;
		constexpr auto Sin = 0x1623990;
		constexpr auto Tan = 0x16239d0;
		constexpr auto Sinh = 0x16239a0;
		constexpr auto Round = 0x1623670;
		constexpr auto SplitFractionDouble = 0x16239b0;
		constexpr auto Truncate = 0x16239e0;
		constexpr auto Sqrt = 0x16239c0;
		constexpr auto Log = 0x16230d0;
		constexpr auto Log10 = 0x1622f60;
		constexpr auto Exp = 0x1622c80;
		constexpr auto Pow = 0x16234e0;
		constexpr auto Abs = 0x1622b30;
		constexpr auto AbsHelper = 0x16229d0;
		constexpr auto Max = 0x1623180;
		constexpr auto Min = 0x16234d0;
		constexpr auto Sign = 0x1623950;
		constexpr auto DivRem = 0x1622c70;
		constexpr auto cctor = 0x1623a90;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x18905c0;
		constexpr auto IsPowerOfTwo = 0x18909e0;
		constexpr auto NextPowerOfTwo = 0x18911b0;
		constexpr auto GammaToLinearSpace = 0x18908b0;
		constexpr auto LinearToGammaSpace = 0x1890c40;
		constexpr auto FloatToHalf = 0x18907b0;
		constexpr auto HalfToFloat = 0x18908f0;
		constexpr auto PerlinNoise = 0x18911f0;
		constexpr auto Sin = 0x1891440;
		constexpr auto Cos = 0x1890600;
		constexpr auto Tan = 0x1891920;
		constexpr auto Asin = 0x1890360;
		constexpr auto Acos = 0x1890250;
		constexpr auto Atan = 0x1890440;
		constexpr auto Atan2 = 0x18903c0;
		constexpr auto Sqrt = 0x18918c0;
		constexpr auto Abs = 0x18901f0;
		constexpr auto Min = 0x1890e50;
		constexpr auto Max = 0x1890dc0;
		constexpr auto Pow = 0x1891240;
		constexpr auto Exp = 0x1890750;
		constexpr auto Log = 0x1890d40;
		constexpr auto Log10 = 0x1890c80;
		constexpr auto Ceil = 0x1890500;
		constexpr auto Floor = 0x1890850;
		constexpr auto Round = 0x18913c0;
		constexpr auto CeilToInt = 0x18904a0;
		constexpr auto FloorToInt = 0x18907f0;
		constexpr auto RoundToInt = 0x1891360;
		constexpr auto Sign = 0x1891420;
		constexpr auto Clamp = 0x1890580;
		constexpr auto Clamp01 = 0x1890560;
		constexpr auto Lerp = 0x1890ba0;
		constexpr auto LerpUnclamped = 0x1890b80;
		constexpr auto LerpAngle = 0x1890a20;
		constexpr auto MoveTowards = 0x18910c0;
		constexpr auto MoveTowardsAngle = 0x1890e60;
		constexpr auto SmoothStep = 0x1891800;
		constexpr auto Approximately = 0x18902b0;
		constexpr auto SmoothDamp = 0x1891630;
		constexpr auto Repeat = 0x18912c0;
		constexpr auto InverseLerp = 0x1890930;
		constexpr auto DeltaAngle = 0x1890660;
		constexpr auto cctor = 0x1891980;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x268;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c0;
		constexpr auto __menuOption_Menu_OpenDoor = 0x318;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x370;
		constexpr auto knockEffect = 0x3c8;
		constexpr auto canTakeLock = 0x3d0;
		constexpr auto hasHatch = 0x3d1;
		constexpr auto canTakeCloser = 0x3d2;
		constexpr auto canTakeKnocker = 0x3d3;
		constexpr auto canNpcOpen = 0x3d4;
		constexpr auto canHandOpen = 0x3d5;
		constexpr auto isSecurityDoor = 0x3d6;
		constexpr auto vehiclePhysBoxes = 0x3d8;
		constexpr auto checkPhysBoxesOnOpen = 0x3e0;
		constexpr auto vehicleCollisionSfx = 0x3e8;
		constexpr auto ClosedColliderRoots = 0x3f0;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xbc8170;
		constexpr auto get_HasMenuOptions = 0xbc9c50;
		constexpr auto OnRpcMessage = 0xbc95a0;
		constexpr auto ResetState = 0xbc99f0;
		constexpr auto HasSlot = 0xbc8d60;
		constexpr auto CanPickup = 0xbc8000;
		constexpr auto Menu_OpenDoor = 0xbc9150;
		constexpr auto Menu_OpenDoor_Proxy = 0xbc9030;
		constexpr auto Menu_OpenDoorStart = 0xbc8ff0;
		constexpr auto Menu_OpenDoor_ShowIf = 0xbc9110;
		constexpr auto Menu_CloseDoor = 0xbc8f00;
		constexpr auto Menu_CloseDoor_Proxy = 0xbc8de0;
		constexpr auto Menu_CloseDoorStart = 0xbc8da0;
		constexpr auto Menu_CloseDoor_ShowIf = 0xbc8ec0;
		constexpr auto Menu_KnockDoor = 0xbc8fb0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xbc8f40;
		constexpr auto Menu_ToggleHatch = 0xbc91a0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xbc9190;
		constexpr auto NeedsCrosshair = 0x2f6d70;
		constexpr auto OnDoorInterrupted = 0xbc91e0;
		constexpr auto ReverseDoorAnimation = 0xbc9a00;
		constexpr auto BoundsPadding = 0x2f66f0;
		constexpr auto OnObjects = 0x2f4fd0;
		constexpr auto OnEmpty = 0x2f4fd0;
		constexpr auto OnFlagsChanged = 0xbc9470;
		constexpr auto ctor = 0xbc9c30;
		constexpr auto cctor = 0xbc9bc0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x189a3e0;
		constexpr auto GetHashCode = 0x189a3d0;
		constexpr auto Equals = 0x1899ff0;
		constexpr auto op_Implicit = 0x189b3e0;
		constexpr auto CompareBaseObjects = 0x1899d00;
		constexpr auto IsNativeObjectAlive = 0x189b030;
		constexpr auto GetCachedPtr = 0x17f5960;
		constexpr auto get_name = 0x189b200;
		constexpr auto set_name = 0x189b660;
		constexpr auto Instantiate = 0x189abc0;
		constexpr auto Destroy = 0x1899ef0;
		constexpr auto DestroyImmediate = 0x1899ea0;
		constexpr auto FindObjectsOfType = 0x189a390;
		constexpr auto DontDestroyOnLoad = 0x1899fb0;
		constexpr auto get_hideFlags = 0x189b1c0;
		constexpr auto set_hideFlags = 0x189b620;
		constexpr auto CheckNullArgument = 0x1899c90;
		constexpr auto FindObjectOfType = 0x189a300;
		constexpr auto ToString = 0x189b0d0;
		constexpr auto op_Equality = 0x189b270;
		constexpr auto op_Inequality = 0x189b4b0;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x189a550;
		constexpr auto Internal_CloneSingle = 0x189af00;
		constexpr auto Internal_CloneSingleWithParent = 0x189aea0;
		constexpr auto Internal_InstantiateSingle = 0x189afa0;
		constexpr auto GetName = 0x189a510;
		constexpr auto SetName = 0x189b080;
		constexpr auto FindObjectFromInstanceID = 0x189a2c0;
		constexpr auto ctor = 0x304620;
		constexpr auto cctor = 0x189b180;
		constexpr auto Internal_InstantiateSingle_Injected = 0x189af40;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x278;
		constexpr auto canAiHearIt = 0x279;
		constexpr auto onlyThrowAsProjectile = 0x27a;
		constexpr auto damageProperties = 0x280;
		constexpr auto damageTypes = 0x288;
		constexpr auto maxDistance = 0x290;
		constexpr auto attackRadius = 0x294;
		constexpr auto isAutomatic = 0x298;
		constexpr auto blockSprintOnAttack = 0x299;
		constexpr auto strikeFX = 0x2a0;
		constexpr auto useStandardHitEffects = 0x2a8;
		constexpr auto aiStrikeDelay = 0x2ac;
		constexpr auto swingEffect = 0x2b0;
		constexpr auto materialStrikeFX = 0x2b8;
		constexpr auto heartStress = 0x2c0;
		constexpr auto gathering = 0x2c8;
		constexpr auto throwReady = 0x2d0;

		constexpr auto OnRpcMessage = 0x2f81a0;
		constexpr auto GetInheritedVelocity = 0x2f7bf0;
		constexpr auto DoThrow = 0x2f73c0;
		constexpr auto CreateProjectile = 0x2f6d80;
		constexpr auto GetAttackStats = 0x2f7b60;
		constexpr auto DoAttackShared = 0x2f6f30;
		constexpr auto OnInput = 0x2f7dc0;
		constexpr auto get_CanAttack = 0x2f6d70;
		constexpr auto get_CanThrow = 0x2f6d70;
		constexpr auto ClientAttack = 0x2f4fd0;
		constexpr auto OnHolstered = 0x2f7da0;
		constexpr auto ProcessAttack = 0x2f8350;
		constexpr auto DoAttack = 0x2f7180;
		constexpr auto DoViewmodelImpact = 0x2f7ad0;
		constexpr auto OnViewmodelEvent = 0x2f8290;
		constexpr auto ProcessSpectatorViewmodel = 0x2f8690;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x2f85e0;
		constexpr auto GetGatherInfoFromIndex = 0x2f7bc0;
		constexpr auto CanHit = 0x2f6d70;
		constexpr auto TotalDamage = 0x2f8740;
		constexpr auto CanBeUsedInWater = 0x2f6d70;
		constexpr auto GetStrikeEffectPath = 0x2f7c40;
		constexpr auto ctor = 0x2f88a0;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x6b1320;
		constexpr auto GetSpreadScalar = 0x6b1360;
		constexpr auto GetIndexedSpreadScalar = 0x6b1290;
		constexpr auto GetAverageVelocity = 0x6b1280;
		constexpr auto GetMinVelocity = 0x6b1310;
		constexpr auto GetMaxVelocity = 0x6b1300;
		constexpr auto IsAmmo = 0x6b13c0;
		constexpr auto ServerProjectileHit = 0x6b13d0;
		constexpr auto ctor = 0x6b14a0;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x5879d0;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x9785e0;
		constexpr auto InvalidateWorkshopSkinCache = 0x978330;
		constexpr auto get_Blueprint = 0x978440;
		constexpr auto get_craftingStackable = 0x978500;
		constexpr auto HasFlag = 0x9780b0;
		constexpr auto Initialize = 0x9780c0;
		constexpr auto GetDisplayName = 0x977fb0;
		constexpr auto GetDescriptionText = 0x977ee0;
		constexpr auto FindIconSprite = 0x977b80;
		constexpr auto get_isWearable = 0x978580;
		constexpr auto get_ItemModWearable = 0x9784f0;
		constexpr auto set_ItemModWearable = 0x978850;
		constexpr auto get_isHoldable = 0x978560;
		constexpr auto set_isHoldable = 0x978860;
		constexpr auto get_isUsable = 0x978570;
		constexpr auto set_isUsable = 0x978870;
		constexpr auto get_HasSkins = 0x978490;
		constexpr auto get_CraftableWithSkin = 0x978480;
		constexpr auto set_CraftableWithSkin = 0x978840;
		constexpr auto ctor = 0x9783d0;
		constexpr auto Initializeb__45_0 = 0x978350;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto offsetAngles = 0x88;
		constexpr auto ignoredButtons = 0x94;
		constexpr auto hasKeyFocus = 0x98;

		constexpr auto OnDisable = 0xa0b930;
		constexpr auto FrameUpdate = 0xa0abc0;
		constexpr auto Flip = 0xa0aa60;
		constexpr auto AdjustMouseMovement = 0xa09160;
		constexpr auto UpdateViewAngles = 0xa0bb40;
		constexpr auto ApplyViewAngles = 0xa093a0;
		constexpr auto SetViewVars = 0xa0ba20;
		constexpr auto FinalizeRecoil = 0xa0a890;
		constexpr auto ResetOffsetAngles = 0xa0b9b0;
		constexpr auto ClientAngles = 0xa0a860;
		constexpr auto ClientLookVars = 0xa0a870;
		constexpr auto HeadAngles = 0xa0af70;
		constexpr auto HeadLookVars = 0xa0af80;
		constexpr auto ModifyInputState = 0xa0b8a0;
		constexpr auto IsButtonDownNative = 0xa0b3f0;
		constexpr auto BuildInputState = 0xa09f20;
		constexpr auto IsAiming = 0xa0b2a0;
		constexpr auto UpdateButton = 0xa0bab0;
		constexpr auto IgnoreCurrentButtons = 0xa0afa0;
		constexpr auto get_hasOnlyPartialKeyInput = 0xa0be30;
		constexpr auto get_hasNoKeyInput = 0xa0bca0;
		constexpr auto UpdateKeyFocus = 0xa0bb20;
		constexpr auto IgnoreCurrentKeys = 0xa0b0b0;
		constexpr auto ctor = 0xa0bc30;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto wasMountedRightAim = 0x2f4;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xa183b0;
		constexpr auto SpineIk = 0xa187d0;
		constexpr auto ParentArmsToCamera = 0xa165f0;
		constexpr auto OnAnimatorIK = 0xa15c60;
		constexpr auto HandIK = 0xa14270;
		constexpr auto FootIK = 0xa10a80;
		constexpr auto HeadIK = 0xa146d0;
		constexpr auto get_ShouldDoLegs = 0xa1e110;
		constexpr auto get_ShouldShowHands = 0xa1e190;
		constexpr auto ClearLegs = 0xa0f8f0;
		constexpr auto RebuildLegs = 0xa16fa0;
		constexpr auto InitializeLegSpineBones = 0xa14e00;
		constexpr auto UpdateLegsBeforeRender = 0xa19fe0;
		constexpr auto UpdateLegsDisable = 0xa1aed0;
		constexpr auto AddLegRenderer = 0xa0ee20;
		constexpr auto SwapLegBone = 0xa191c0;
		constexpr auto GetFlat = 0xa136e0;
		constexpr auto RebuildAll = 0xa16ba0;
		constexpr auto get_overrideSkinSeed = 0xa1e470;
		constexpr auto set_overrideSkinSeed = 0xa1e4b0;
		constexpr auto get_IsFemale = 0xa1e0c0;
		constexpr auto get_SkinSet = 0xa1e270;
		constexpr auto get_AimAngles = 0xa1df70;
		constexpr auto set_AimAngles = 0xa1e480;
		constexpr auto get_LookAngles = 0xa1e100;
		constexpr auto set_LookAngles = 0xa1e4a0;
		constexpr auto get_GestureAllowsSpineMovement = 0xa1e020;
		constexpr auto get_GestureAllowsRootMotion = 0xa1df80;
		constexpr auto get_IsFirstPerson = 0xa1e0d0;
		constexpr auto get_IsNpc = 0xa1e0f0;
		constexpr auto set_IsNpc = 0xa1e490;
		constexpr auto get_multiMesh = 0xa1e3d0;
		constexpr auto get_animator = 0xa1e290;
		constexpr auto get_lodGroup = 0xa1e330;
		constexpr auto GetTargetVelocity = 0xa14110;
		constexpr auto Awake = 0xa0f850;
		constexpr auto OnEnable = 0xa16080;
		constexpr auto OnDisable = 0xa15d90;
		constexpr auto SetDefaultAnimatorWeights = 0xa17cc0;
		constexpr auto UpdateMultiMesh = 0xa1b570;
		constexpr auto UpdateCensorship = 0xa19700;
		constexpr auto UpdateCollider = 0xa19b80;
		constexpr auto UpdateModelState = 0xa1b520;
		constexpr auto UpdatePosition = 0xa1c030;
		constexpr auto UpdateRotation = 0xa1c150;
		constexpr auto UpdateLocalVelocity = 0xa1b450;
		constexpr auto UpdateVelocity = 0xa1cad0;
		constexpr auto UpdateParameters = 0xa1b700;
		constexpr auto UpdateFrom = 0xa19df0;
		constexpr auto UpdateGlobalShaderConstants = 0xa19e50;
		constexpr auto LateCycle = 0xa155e0;
		constexpr auto FrameUpdate = 0xa12cf0;
		constexpr auto FrameUpdate_Default = 0xa12310;
		constexpr auto FrameUpdate_Sleeping = 0xa12a20;
		constexpr auto FrameUpdate_Incapacitated = 0xa12480;
		constexpr auto FrameUpdate_OnLadder = 0xa12750;
		constexpr auto GetAim360 = 0xa13470;
		constexpr auto UpdateVehicleAim360 = 0xa1c5e0;
		constexpr auto ResetCurrentState = 0xa17b70;
		constexpr auto DoAimingSounds = 0xa10220;
		constexpr auto SetAimSounds = 0xa17c80;
		constexpr auto SetMountedLookAtWeight = 0xa183c0;
		constexpr auto SetMountedAnimationSpeed = 0xa183a0;
		constexpr auto UpdateLocalPlayerPosition = 0xa1b100;
		constexpr auto Attack = 0xa0f7d0;
		constexpr auto AltAttack = 0xa0f490;
		constexpr auto Deploy = 0xa10170;
		constexpr auto Reload = 0xa178f0;
		constexpr auto Holster = 0xa14d80;
		constexpr auto Flinch = 0xa10a20;
		constexpr auto SetReactionAnim = 0xa183d0;
		constexpr auto OnReactionEnded = 0xa165c0;
		constexpr auto Throw = 0xa194f0;
		constexpr auto Gesture = 0xa130e0;
		constexpr auto FadeInGestureUpperBodyLayer = 0xa10480;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xa10770;
		constexpr auto FadeInGestureFullBodyLayer = 0xa10360;
		constexpr auto FadeOutGestureFullBodyLayer = 0xa105a0;
		constexpr auto AnimatorWarmup = 0xa0f540;
		constexpr auto AlwaysAnimate = 0xa0f510;
		constexpr auto SetHoldType = 0xa18020;
		constexpr auto FadeOutGestureLayer = 0xa10700;
		constexpr auto SetGesture = 0xa17dd0;
		constexpr auto FadeOutPlayerGestureLayers = 0xa108d0;
		constexpr auto StopGesture = 0xa190c0;
		constexpr auto PlayCinematic = 0xa16a10;
		constexpr auto StopCinematic = 0xa19060;
		constexpr auto SetSpeedOverride = 0xa187b0;
		constexpr auto GetReplacementUnderwear = 0xa14050;
		constexpr auto RemoveUnderwearParts = 0xa17a40;
		constexpr auto Clear = 0xa0fa50;
		constexpr auto Rebuild = 0xa17360;
		constexpr auto AddPart = 0xa0f1b0;
		constexpr auto RemovePart = 0xa17970;
		constexpr auto HasPart = 0xa14610;
		constexpr auto IsBarefoot = 0xa15550;
		constexpr auto GetSkinColor = 0xa14090;
		constexpr auto SetSkinProperties = 0xa18690;
		constexpr auto RefreshUnderwear = 0xa17560;
		constexpr auto ForceModelSeed = 0xa120e0;
		constexpr auto FindBone = 0xa109f0;
		constexpr auto GetBones = 0xa136b0;
		constexpr auto GetFootPlacement = 0xa13720;
		constexpr auto ApplyVisibility = 0xa0f5a0;
		constexpr auto ToggleUpdateOffscreen = 0xa19590;
		constexpr auto OnParentDestroying = 0xa164c0;
		constexpr auto WorkshopPreviewSetup = 0xa1cee0;
		constexpr auto ctor = 0xa1ddc0;
		constexpr auto cctor = 0xa1d880;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x1ecfa50;
		constexpr auto Dispose = 0x1ecf650;
		constexpr auto EnterPool = 0xb5b8a0;
		constexpr auto LeavePool = 0xb5b8d0;
		constexpr auto CopyTo = 0x1ecdb60;
		constexpr auto Copy = 0x1ecdda0;
		constexpr auto Deserialize = 0x1eceb50;
		constexpr auto DeserializeLengthDelimited = 0x1ecde20;
		constexpr auto DeserializeLength = 0x1ece2d0;
		constexpr auto FromProto = 0x1ecf6d0;
		constexpr auto WriteToStream = 0x1ed0910;
		constexpr auto WriteToStreamDelta = 0x1ed0930;
		constexpr auto ReadFromStream = 0x1ecfa30;
		constexpr auto SerializeDelta = 0x1ecff00;
		constexpr auto Serialize = 0x1ed0520;
		constexpr auto ToProtoBytes = 0x1ed0900;
		constexpr auto ToProto = 0x1ed0910;
		constexpr auto SerializeToBytes = 0x1ed0410;
		constexpr auto SerializeLengthDelimited = 0x1ed0360;
		constexpr auto ctor = 0xb5c160;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xa0cc60;
		constexpr auto Initialize = 0xa0c8e0;
		constexpr auto DoDestroy = 0xa0c0c0;
		constexpr auto ClientInit = 0xa0c040;
		constexpr auto UpdatedItemContainer = 0xa0d0b0;
		constexpr auto FindItemUID = 0xa0c700;
		constexpr auto FindItemID = 0xa0c420;
		constexpr auto FindBySubEntityID = 0xa0c1a0;
		constexpr auto FindItemIDs = 0xa0c610;
		constexpr auto FindContainer = 0xa0c270;
		constexpr auto GetContainer = 0xa0c860;
		constexpr auto Load = 0xa0cb10;
		constexpr auto GetAmount = 0xa0c7e0;
		constexpr auto AllItems = 0xa0bf70;
		constexpr auto AllItemsNoAlloc = 0xa0bea0;
		constexpr auto FindAmmo = 0xa0c150;
		constexpr auto HasAmmo = 0xa0c880;
		constexpr auto ctor = 0xa0d2a0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x975fd0;
		constexpr auto SetFlag = 0x977080;
		constexpr auto IsLocked = 0x9761a0;
		constexpr auto PlayerItemInputBlocked = 0x976cc0;
		constexpr auto get_HasLimitedAllowedItems = 0x9773c0;
		constexpr auto OnChanged = 0x976c20;
		constexpr auto ClientInitialize = 0x975130;
		constexpr auto FindItemByUID = 0x9756d0;
		constexpr auto IsFull = 0x976150;
		constexpr auto IsEmpty = 0x976110;
		constexpr auto CanAccept = 0x975000;
		constexpr auto GetMaxTransferAmount = 0x975c80;
		constexpr auto SetOnlyAllowedItem = 0x9770a0;
		constexpr auto SetOnlyAllowedItems = 0x977160;
		constexpr auto Insert = 0x975fe0;
		constexpr auto SlotTaken = 0x9772f0;
		constexpr auto GetSlot = 0x975e30;
		constexpr auto FindPosition = 0x9759b0;
		constexpr auto Clear = 0x975050;
		constexpr auto Kill = 0x9761b0;
		constexpr auto GetAmount = 0x975b00;
		constexpr auto FindItemByItemID = 0x975560;
		constexpr auto FindItemsByItemName = 0x975860;
		constexpr auto FindBySubEntityID = 0x975300;
		constexpr auto FindItemsByItemID = 0x9757b0;
		constexpr auto Save = 0x976cd0;
		constexpr auto Load = 0x976470;
		constexpr auto GetOwnerPlayer = 0x590f20;
		constexpr auto FindAmmo = 0x975240;
		constexpr auto HasAmmo = 0x975f00;
		constexpr auto GetAmmoAmount = 0x975a40;
		constexpr auto ContentsHash = 0x975170;
		constexpr auto FindContainer = 0x975470;
		constexpr auto CanAcceptItem = 0x974b90;
		constexpr auto ctor = 0x977310;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto DefaultArmourBreakEffectPath = 0x8;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x97ee90;
		constexpr auto FormatAmount = 0x97d940;
		constexpr auto set_condition = 0x97fe60;
		constexpr auto get_condition = 0x730710;
		constexpr auto set_maxCondition = 0x97fee0;
		constexpr auto get_maxCondition = 0x7306e0;
		constexpr auto get_maxConditionNormalized = 0x97fc10;
		constexpr auto get_conditionNormalized = 0x97f7a0;
		constexpr auto set_conditionNormalized = 0x97fdc0;
		constexpr auto get_hasCondition = 0x97f8a0;
		constexpr auto get_isBroken = 0x97fae0;
		constexpr auto get_despawnMultiplier = 0x97f7e0;
		constexpr auto get_blueprintTargetDef = 0x97f770;
		constexpr auto get_blueprintTarget = 0x97f790;
		constexpr auto set_blueprintTarget = 0x97fd30;
		constexpr auto get_blueprintAmount = 0x97f760;
		constexpr auto set_blueprintAmount = 0x97fd20;
		constexpr auto IsBlueprint = 0x97de80;
		constexpr auto add_OnDirty = 0x97f6a0;
		constexpr auto remove_OnDirty = 0x97fc80;
		constexpr auto HasFlag = 0x97de70;
		constexpr auto SetFlag = 0x97e990;
		constexpr auto IsOn = 0x97e0b0;
		constexpr auto IsOnFire = 0x97e0a0;
		constexpr auto IsCooking = 0x97e060;
		constexpr auto IsLocked = 0x97e070;
		constexpr auto get_parentItem = 0x97fc40;
		constexpr auto MarkDirty = 0x97e4e0;
		constexpr auto OnChanged = 0x97e5d0;
		constexpr auto CollectedForCrafting = 0x2f4fd0;
		constexpr auto ReturnedFromCancelledCraft = 0x2f4fd0;
		constexpr auto IsChildContainer = 0x97ded0;
		constexpr auto IsBusy = 0x97dea0;
		constexpr auto BusyFor = 0x97d3f0;
		constexpr auto Remove = 0x97e780;
		constexpr auto DoRemove = 0x97d6a0;
		constexpr auto SwitchOnOff = 0x97eb20;
		constexpr auto LockUnlock = 0x97e460;
		constexpr auto get_temperature = 0x97fc60;
		constexpr auto GetOwnerPlayer = 0x97dc80;
		constexpr auto CanBeHeld = 0x97d420;
		constexpr auto CanStack = 0x97d460;
		constexpr auto IsValid = 0x97e0c0;
		constexpr auto SetWorldEntity = 0x97e9b0;
		constexpr auto OnMovedToWorld = 0x97e6f0;
		constexpr auto GetWorldEntity = 0x97dd30;
		constexpr auto GetHeldEntity = 0x97dc60;
		constexpr auto BeltBarSelect = 0x97d350;
		constexpr auto GetTotalUISlots = 0x97dca0;
		constexpr auto GetFilledUISlots = 0x97dbd0;
		constexpr auto HasAmmo = 0x97dd50;
		constexpr auto FindAmmo = 0x97d6f0;
		constexpr auto GetAmmoAmount = 0x97daa0;
		constexpr auto ToString = 0x97eba0;
		constexpr auto FindItem = 0x97d830;
		constexpr auto MaxStackable = 0x97e540;
		constexpr auto get_iconSprite = 0x97f940;
		constexpr auto get_isLoadingIconSprite = 0x97fb10;
		constexpr auto get_Traits = 0x97f740;
		constexpr auto Save = 0x97e7e0;
		constexpr auto Load = 0x97e0d0;
		constexpr auto ctor = 0x97f680;
		constexpr auto cctor = 0x97f590;
		constexpr auto get_iconSpriteb__95_0 = 0x97ee80;
		constexpr auto get_isLoadingIconSpriteb__97_0 = 0x97ee80;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x72fc70;
		constexpr auto BuildBoneDictionary = 0x72f3e0;
		constexpr auto GetSkin = 0x501dd0;
		constexpr auto FindBoneInternal = 0x72f4d0;
		constexpr auto FindBone = 0x72f560;
		constexpr auto FindBoneID = 0x72f490;
		constexpr auto GetBones = 0x72f770;
		constexpr auto FindClosestBone = 0x72f5d0;
		constexpr auto get_lodGroup = 0x730460;
		constexpr auto OnDisable = 0x72fb40;
		constexpr auto SyncBones = 0x730040;
		constexpr auto Trigger = 0x7303b0;
		constexpr auto GetTransform = 0x72f7a0;
		constexpr auto ApplyVisibility = 0x72f250;
		constexpr auto PreProcess = 0x72fc80;
		constexpr auto ctor = 0x2f8ac0;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x278;
		constexpr auto healDurationOther = 0x27c;
		constexpr auto healDurationOtherWounded = 0x280;
		constexpr auto maxDistanceOther = 0x284;
		constexpr auto canUseOnOther = 0x288;
		constexpr auto canRevive = 0x289;
		constexpr auto useTarget = 0x290;
		constexpr auto resetTime = 0x298;

		constexpr auto OnRpcMessage = 0x7dc770;
		constexpr auto GetTarget = 0x7dc010;
		constexpr auto AnyPressed = 0x7dbf40;
		constexpr auto OnInput = 0x7dc3c0;
		constexpr auto OnViewmodelEvent = 0x7dcb40;
		constexpr auto Reset = 0x7dcd50;
		constexpr auto OnDeploy = 0x7dc360;
		constexpr auto OnHolstered = 0x7dc390;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x7dcc90;
		constexpr auto ctor = 0x7dcd70;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x160;
		constexpr auto punchAdded = 0x168;
		constexpr auto lastPunchTime = 0x174;
		constexpr auto worldModelAnimator = 0x178;
		constexpr auto thirdPersonDeploySound = 0x180;
		constexpr auto thirdPersonAimSound = 0x188;
		constexpr auto thirdPersonAimEndSound = 0x190;
		constexpr auto viewModel = 0x198;
		constexpr auto isDeployed = 0x1a0;
		constexpr auto nextExamineTime = 0x1a4;
		constexpr auto handBone = 0x1a8;
		constexpr auto HoldAnimationOverride = 0x1b0;
		constexpr auto isBuildingTool = 0x1b8;
		constexpr auto hostileScore = 0x1bc;
		constexpr auto holsterInfo = 0x1c0;
		constexpr auto HeldCameraMode = 0x1c8;
		constexpr auto FirstPersonArmOffset = 0x1cc;
		constexpr auto FirstPersonArmRotation = 0x1d8;
		constexpr auto FirstPersonRotationStrength = 0x1e4;
		constexpr auto ownerItemUID = 0x1e8;

		constexpr auto OnRpcMessage = 0x76bee0;
		constexpr auto AddPunch = 0x76b160;
		constexpr auto CL_Punch = 0x76b230;
		constexpr auto DoRecoilCompensation = 0x2f4fd0;
		constexpr auto SimPunches = 0x76c6d0;
		constexpr auto ClientInit = 0x76b2e0;
		constexpr auto GetFovOverride = 0x76b560;
		constexpr auto DoNetworkDestroy = 0x76b3b0;
		constexpr auto PostLateClientCycle = 0x2f4fd0;
		constexpr auto PostNetworkUpdate = 0x76c390;
		constexpr auto UpdateHolsteredOffset = 0x76cbb0;
		constexpr auto EditViewAngles = 0x2f4fd0;
		constexpr auto ClampPitch = 0x2f4fd0;
		constexpr auto OnFrame = 0x76bd50;
		constexpr auto OnInput = 0x2f4fd0;
		constexpr auto Examine = 0x76b3f0;
		constexpr auto OnDeploy = 0x76ba90;
		constexpr auto OnDeployed = 0x76bd40;
		constexpr auto OnHolster = 0x76bd70;
		constexpr auto OnHolstered = 0x76bed0;
		constexpr auto OnViewmodelEvent = 0x2f4fd0;
		constexpr auto OnReliableEvent = 0x2f4fd0;
		constexpr auto ModifyCamera = 0x2f4fd0;
		constexpr auto ShouldDestroyImmediately = 0x2f6d70;
		constexpr auto UpdatePlayerModel = 0x76d3b0;
		constexpr auto ProcessPlayerModel = 0x2f4fd0;
		constexpr auto GetHoldAnimations = 0x76b750;
		constexpr auto GetMovementMultiplier = 0x2fcff0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2f4fd0;
		constexpr auto HeldEntityBlocksMovement = 0x2f4190;
		constexpr auto ProcessSpectatorViewmodel = 0x2f4fd0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x76c620;
		constexpr auto get_hostile = 0x76d560;
		constexpr auto LightsOn = 0x670740;
		constexpr auto IsDeployed = 0x76ba20;
		constexpr auto GetOwnerPlayer = 0x76b960;
		constexpr auto GetOwnerConnection = 0x76b770;
		constexpr auto CanBeUsedInWater = 0x2f4190;
		constexpr auto BlocksGestures = 0x2f4190;
		constexpr auto GetOwnerItem = 0x76b880;
		constexpr auto GetItem = 0x76b760;
		constexpr auto GetOwnerItemDefinition = 0x76b800;
		constexpr auto IsInstrument = 0x2f4190;
		constexpr auto Load = 0x76ba30;
		constexpr auto ctor = 0x76d470;
		constexpr auto cctor = 0x76d430;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x17f5960;
		constexpr auto set_text = 0x5a6b10;
		constexpr auto set_image = 0x506050;
		constexpr auto get_tooltip = 0x19fa2b0;
		constexpr auto set_tooltip = 0x2fef10;
		constexpr auto ctor = 0x19fa220;
		constexpr auto Temp = 0x19f9b00;
		constexpr auto ClearStaticCache = 0x19f99a0;
		constexpr auto cctor = 0x19f9dd0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x160;
		constexpr auto skeletonProperties = 0x1b8;
		constexpr auto baseProtection = 0x1c0;
		constexpr auto startHealth = 0x1c8;
		constexpr auto pickup = 0x1d0;
		constexpr auto repair = 0x1f0;
		constexpr auto ShowHealthInfo = 0x218;
		constexpr auto lifestate = 0x21c;
		constexpr auto sendsHitNotification = 0x220;
		constexpr auto sendsMeleeHitNotification = 0x221;
		constexpr auto markAttackerHostile = 0x222;
		constexpr auto _health = 0x224;
		constexpr auto _maxHealth = 0x228;
		constexpr auto faction = 0x22c;
		constexpr auto deathTime = 0x230;
		constexpr auto lastNotifyFrame = 0x234;

		constexpr auto GetMenuOptions = 0x885700;
		constexpr auto get_HasMenuOptions = 0x886700;
		constexpr auto OnRpcMessage = 0x885e10;
		constexpr auto HitNotify = 0x885a90;
		constexpr auto ClientInit = 0x885290;
		constexpr auto DisplayHealthInfo = 0x516130;
		constexpr auto GetEyeTransform = 0x885640;
		constexpr auto OnLifeStateChanged = 0x885de0;
		constexpr auto GetPickupCount = 0x885a70;
		constexpr auto CanPickup = 0x8851f0;
		constexpr auto OnPickedUp = 0x2f4fd0;
		constexpr auto OnPickedUpPreItemMove = 0x2f4fd0;
		constexpr auto Menu_Pickup = 0x885c80;
		constexpr auto Menu_Pickup_TimeStart = 0x2f4fd0;
		constexpr auto Menu_Pickup_If = 0x885c60;
		constexpr auto BuildCost = 0x885120;
		constexpr auto IsDead = 0x885bb0;
		constexpr auto IsAlive = 0x885ba0;
		constexpr auto GetFaction = 0x8856f0;
		constexpr auto IsFriendly = 0x2f4190;
		constexpr auto get_SecondsSinceDeath = 0x8867d0;
		constexpr auto get_healthFraction = 0x8867f0;
		constexpr auto ResetState = 0x8863d0;
		constexpr auto DestroyShared = 0x8852d0;
		constexpr auto GetThreatLevel = 0x2fcd90;
		constexpr auto PenetrationResistance = 0x886340;
		constexpr auto ScaleDamage = 0x886480;
		constexpr auto SkeletonLookup = 0x8865c0;
		constexpr auto Load = 0x885bc0;
		constexpr auto get_health = 0x885a80;
		constexpr auto set_health = 0x886840;
		constexpr auto Health = 0x885a80;
		constexpr auto MaxHealth = 0x305a10;
		constexpr auto StartHealth = 0x305af0;
		constexpr auto StartMaxHealth = 0x886670;
		constexpr auto SetMaxHealth = 0x886530;
		constexpr auto DoHitNotify = 0x8852e0;
		constexpr auto OnAttacked = 0x885cc0;
		constexpr auto ctor = 0x886690;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x965a80;
		constexpr auto WasDown = 0x965b50;
		constexpr auto IsAnyDown = 0x965a50;
		constexpr auto WasJustPressed = 0x965b70;
		constexpr auto WasJustReleased = 0x965bb0;
		constexpr auto SwallowButton = 0x965b40;
		constexpr auto AimAngle = 0x965890;
		constexpr auto MouseDelta = 0x965ab0;
		constexpr auto Flip = 0x965980;
		constexpr auto Clear = 0x965950;
		constexpr auto ctor = 0x965bf0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1dfde10;
		constexpr auto Dispose = 0x1dfdb10;
		constexpr auto EnterPool = 0xb5b8a0;
		constexpr auto LeavePool = 0xb5b8d0;
		constexpr auto CopyTo = 0x1dfcb70;
		constexpr auto Copy = 0x1dfcbb0;
		constexpr auto Deserialize = 0x1dfd240;
		constexpr auto DeserializeLengthDelimited = 0x1dfced0;
		constexpr auto DeserializeLength = 0x1dfcf50;
		constexpr auto FromProto = 0x1dfdb90;
		constexpr auto WriteToStream = 0x1dfe6e0;
		constexpr auto WriteToStreamDelta = 0x1dfe700;
		constexpr auto ReadFromStream = 0x1dfdd50;
		constexpr auto SerializeDelta = 0x1dfdeb0;
		constexpr auto Serialize = 0x1dfe470;
		constexpr auto ToProtoBytes = 0x1dfe6d0;
		constexpr auto ToProto = 0x1dfe6e0;
		constexpr auto SerializeToBytes = 0x1dfe360;
		constexpr auto SerializeLengthDelimited = 0x1dfe2b0;
		constexpr auto ctor = 0xb5c160;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x238;
		constexpr auto eyePositionOverride = 0x290;
		constexpr auto eyeCenterOverride = 0x298;
		constexpr auto pitchClamp = 0x2a0;
		constexpr auto yawClamp = 0x2a8;
		constexpr auto canWieldItems = 0x2b0;
		constexpr auto relativeViewAngles = 0x2b1;
		constexpr auto mountAnchor = 0x2b8;
		constexpr auto mountPose = 0x2c0;
		constexpr auto maxMountDistance = 0x2c4;
		constexpr auto dismountPositions = 0x2c8;
		constexpr auto checkPlayerLosOnMount = 0x2d0;
		constexpr auto disableMeshCullingForPlayers = 0x2d1;
		constexpr auto allowHeadLook = 0x2d2;
		constexpr auto modifiesPlayerCollider = 0x2d3;
		constexpr auto customPlayerCollider = 0x2d4;
		constexpr auto mountSoundDef = 0x2e8;
		constexpr auto swapSoundDef = 0x2f0;
		constexpr auto dismountSoundDef = 0x2f8;
		constexpr auto mountTimeStatType = 0x300;
		constexpr auto allowedGestures = 0x304;
		constexpr auto canDrinkWhileMounted = 0x308;
		constexpr auto allowSleeperMounting = 0x309;
		constexpr auto animateClothInLocalSpace = 0x30a;
		constexpr auto MountedCameraMode = 0x30c;
		constexpr auto isMobile = 0x310;
		constexpr auto SideLeanAmount = 0x314;

		constexpr auto GetMenuOptions = 0x2fca80;
		constexpr auto get_HasMenuOptions = 0x2feb70;
		constexpr auto OnRpcMessage = 0x2fd8d0;
		constexpr auto CanHoldItems = 0x2fbfb0;
		constexpr auto GetMountedCameraMode = 0x2fcdf0;
		constexpr auto DirectlyMountable = 0x2f6d70;
		constexpr auto GetEyeOverride = 0x2fc9f0;
		constexpr auto GetMountedBodyAngles = 0x2fcda0;
		constexpr auto ModifiesThirdPersonCamera = 0x2f4190;
		constexpr auto GetPitchClamp = 0x2fcfd0;
		constexpr auto GetYawClamp = 0x2fd000;
		constexpr auto IsMounted = 0x2fd0a0;
		constexpr auto EyePositionForPlayer = 0x2fc670;
		constexpr auto EyeCenterForPlayer = 0x2fc570;
		constexpr auto WaterFactorForPlayer = 0x2fea00;
		constexpr auto MaxVelocity = 0x2fd1e0;
		constexpr auto PlayerIsMounted = 0x2fded0;
		constexpr auto OnClientInput = 0x2f4fd0;
		constexpr auto ForceUpdatePlayerModel = 0x2f4190;
		constexpr auto UpdatePlayerModel = 0x2fe410;
		constexpr auto ProcessPlayerModel = 0x2f4fd0;
		constexpr auto SuppressHandsAnimationLayer = 0x2f4190;
		constexpr auto GetAnimationOverride = 0x2fc9e0;
		constexpr auto GetSpineLookAtWeight = 0x2fcff0;
		constexpr auto GetMountedAnimationSpeed = 0x2fcd90;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x2f6d70;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x2feb60;
		constexpr auto ModifyThirdPersonEyeOffset = 0x2fd3a0;
		constexpr auto LockThirdPersonOffset = 0x2fd170;
		constexpr auto LocalPlayerIsMounted = 0x2fd0b0;
		constexpr auto VehicleParent = 0x2fe970;
		constexpr auto get_IsSummerDlcVehicle = 0x2f4190;
		constexpr auto IsInstrument = 0x2f4190;
		constexpr auto UpdatePlayerRotation = 0x2fe8c0;
		constexpr auto SetNetworkPosition = 0x2fe3e0;
		constexpr auto UpdatePlayerPosition = 0x2fe750;
		constexpr auto GetMountedRotation = 0x2fcec0;
		constexpr auto GetMountedPosition = 0x2fce00;
		constexpr auto PlayerMounted = 0x2fdfb0;
		constexpr auto PlayerDismounted = 0x2fd9f0;
		constexpr auto ClientOnPlayerDismounted = 0x2fbfc0;
		constexpr auto ClientOnPlayerMounted = 0x2fc060;
		constexpr auto OverrideViewAngles = 0x2fd9c0;
		constexpr auto DoPlayerMovement = 0x2fc240;
		constexpr auto HoldToDismount = 0x2fd020;
		constexpr auto ClientRequestDismount = 0x2fc130;
		constexpr auto Menu_Mount = 0x2fd330;
		constexpr auto Menu_Mount_ShowIf = 0x2fd290;
		constexpr auto MountMenuVisible = 0x2fd3c0;
		constexpr auto NearMountPoint = 0x2fd450;
		constexpr auto ConvertVector = 0x2fc170;
		constexpr auto get_BlocksDoors = 0x2f6d70;
		constexpr auto ctor = 0x2feab0;
		constexpr auto DoPlayerMovementb__77_0 = 0x2fc130;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionResolution = 0x8;
		constexpr auto ReflectionUpdateInterval = 0xc;
		constexpr auto ReflectionTimeSlicing = 0x10;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x12a10c0;
		constexpr auto get_Instance = 0x12a0ff0;
		constexpr auto get_Initialized = 0xc9aea0;
		constexpr auto set_Initialized = 0xc9aeb0;
		constexpr auto get_Headless = 0x12a0fd0;
		constexpr auto get_Components = 0x9093f0;
		constexpr auto set_Components = 0xc3a6c0;
		constexpr auto get_Resources = 0x2ff2b0;
		constexpr auto set_Resources = 0x2ff390;
		constexpr auto get_IsDay = 0x12a1120;
		constexpr auto set_IsDay = 0x12a14f0;
		constexpr auto get_IsNight = 0x12a1130;
		constexpr auto set_IsNight = 0x12a1500;
		constexpr auto get_Radius = 0x12a13d0;
		constexpr auto get_Diameter = 0x12a0f70;
		constexpr auto get_LerpValue = 0x946ac0;
		constexpr auto set_LerpValue = 0x946c80;
		constexpr auto get_SunZenith = 0x12a1490;
		constexpr auto set_SunZenith = 0x12a16f0;
		constexpr auto get_SunAltitude = 0x12a1410;
		constexpr auto set_SunAltitude = 0x12a1650;
		constexpr auto get_SunAzimuth = 0x12a1420;
		constexpr auto set_SunAzimuth = 0x12a1660;
		constexpr auto get_MoonZenith = 0x12a1360;
		constexpr auto set_MoonZenith = 0x12a1640;
		constexpr auto get_MoonAltitude = 0x12a12c0;
		constexpr auto set_MoonAltitude = 0x12a1590;
		constexpr auto get_MoonAzimuth = 0x12a12d0;
		constexpr auto set_MoonAzimuth = 0x12a15a0;
		constexpr auto get_SunsetTime = 0x12a14b0;
		constexpr auto set_SunsetTime = 0x12a1710;
		constexpr auto get_SunriseTime = 0x12a14a0;
		constexpr auto set_SunriseTime = 0x12a1700;
		constexpr auto get_LocalSiderealTime = 0x10a69c0;
		constexpr auto set_LocalSiderealTime = 0x10a71c0;
		constexpr auto get_LightZenith = 0x12a11e0;
		constexpr auto get_LightIntensity = 0x12a11b0;
		constexpr auto get_SunVisibility = 0x12a1480;
		constexpr auto set_SunVisibility = 0x12a16e0;
		constexpr auto get_MoonVisibility = 0x10a6810;
		constexpr auto set_MoonVisibility = 0x12a1630;
		constexpr auto get_SunDirection = 0x12a1430;
		constexpr auto set_SunDirection = 0x12a1680;
		constexpr auto get_MoonDirection = 0x12a12f0;
		constexpr auto set_MoonDirection = 0x12a15c0;
		constexpr auto get_LightDirection = 0x12a1190;
		constexpr auto set_LightDirection = 0x12a1510;
		constexpr auto get_LocalSunDirection = 0x12a12a0;
		constexpr auto set_LocalSunDirection = 0x12a1570;
		constexpr auto get_LocalMoonDirection = 0x12a1280;
		constexpr auto set_LocalMoonDirection = 0x12a1550;
		constexpr auto get_LocalLightDirection = 0x12a1260;
		constexpr auto set_LocalLightDirection = 0x12a1530;
		constexpr auto get_SunLightColor = 0x12a1450;
		constexpr auto set_SunLightColor = 0x12a16a0;
		constexpr auto get_MoonLightColor = 0x12a1320;
		constexpr auto set_MoonLightColor = 0x12a15f0;
		constexpr auto get_LightColor = 0x12a1140;
		constexpr auto get_SunRayColor = 0x12a1470;
		constexpr auto set_SunRayColor = 0x12a16c0;
		constexpr auto get_MoonRayColor = 0x12a1340;
		constexpr auto set_MoonRayColor = 0x12a1610;
		constexpr auto get_SunSkyColor = 0xe94070;
		constexpr auto set_SunSkyColor = 0x12a16d0;
		constexpr auto get_MoonSkyColor = 0x12a1350;
		constexpr auto set_MoonSkyColor = 0x12a1620;
		constexpr auto get_SunMeshColor = 0x12a1460;
		constexpr auto set_SunMeshColor = 0x12a16b0;
		constexpr auto get_MoonMeshColor = 0x12a1330;
		constexpr auto set_MoonMeshColor = 0x12a1600;
		constexpr auto get_SunCloudColor = 0xc49da0;
		constexpr auto set_SunCloudColor = 0x12a1670;
		constexpr auto get_MoonCloudColor = 0x12a12e0;
		constexpr auto set_MoonCloudColor = 0x12a15b0;
		constexpr auto get_FogColor = 0x12a0fb0;
		constexpr auto set_FogColor = 0x12a14d0;
		constexpr auto get_GroundColor = 0x12a0fc0;
		constexpr auto set_GroundColor = 0x12a14e0;
		constexpr auto get_AmbientColor = 0x12a0f60;
		constexpr auto set_AmbientColor = 0x12a14c0;
		constexpr auto get_MoonHaloColor = 0x12a1310;
		constexpr auto set_MoonHaloColor = 0x12a15e0;
		constexpr auto get_Probe = 0x12a13b0;
		constexpr auto get_ProbeInstance = 0x12a1390;
		constexpr auto get_ProbeEx = 0x12a1370;
		constexpr auto OrbitalToUnity = 0x1299190;
		constexpr auto OrbitalToLocal = 0x12990d0;
		constexpr auto SampleAtmosphere = 0x129a8b0;
		constexpr auto RenderToSphericalHarmonics = 0x129a750;
		constexpr auto RenderToCubemap = 0x12992a0;
		constexpr auto RenderToProbe = 0x12993e0;
		constexpr auto ReflectionIsUpdating = 0x1299260;
		constexpr auto UpdateProbeBlending = 0x129edb0;
		constexpr auto UpdateProbeProperties = 0x129eea0;
		constexpr auto SampleFogColor = 0x129ac30;
		constexpr auto SampleSkyColor = 0x129aee0;
		constexpr auto SampleEquatorColor = 0x129ab70;
		constexpr auto UpdateFog = 0x129ed30;
		constexpr auto UpdateAmbient = 0x129c400;
		constexpr auto UpdateReflection = 0x129f790;
		constexpr auto DelayReflectionUpdate = 0x1298a30;
		constexpr auto LoadParameters = 0x1298e20;
		constexpr auto SaveParameters = 0x129aff0;
		constexpr auto UpdateQualitySettings = 0x129f180;
		constexpr auto UpdateRenderSettings = 0x129f890;
		constexpr auto UpdateShaderKeywords = 0x129fe30;
		constexpr auto UpdateShaderProperties = 0x12a0030;
		constexpr auto ShaderScale = 0x129b560;
		constexpr auto ShaderMiePhase = 0x129b240;
		constexpr auto ShaderRayleighPhase = 0x129b540;
		constexpr auto ShaderNightSkyColor = 0x129b450;
		constexpr auto ShaderMoonHaloColor = 0x129b310;
		constexpr auto TOD_HDR2LDR = 0x129c1b0;
		constexpr auto TOD_GAMMA2LINEAR = 0x129c150;
		constexpr auto TOD_LINEAR2GAMMA = 0x129c330;
		constexpr auto ShaderScatteringColor = 0x129b610;
		constexpr auto Initialize = 0x1298a40;
		constexpr auto Cleanup = 0x1298880;
		constexpr auto OnEnable = 0x1299080;
		constexpr auto OnDisable = 0x1299070;
		constexpr auto LateUpdate = 0x1298b40;
		constexpr auto OnValidate = 0x1299090;
		constexpr auto UpdateScattering = 0x129fc80;
		constexpr auto UpdateCelestials = 0x129cb70;
		constexpr auto ctor = 0x12a0e50;
		constexpr auto cctor = 0x12a0db0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18a19c0;
		constexpr auto get_state = 0x18a1c90;
		constexpr auto set_state = 0x18a1d40;
		constexpr auto Range = 0x18a1a40;
		constexpr auto RandomRangeInt = 0x18a1a00;
		constexpr auto get_value = 0x18a1cd0;
		constexpr auto get_insideUnitSphere = 0x18a1b10;
		constexpr auto GetRandomUnitCircle = 0x18a1980;
		constexpr auto get_insideUnitCircle = 0x18a1a90;
		constexpr auto get_onUnitSphere = 0x18a1b90;
		constexpr auto get_rotation = 0x18a1c10;
		constexpr auto RandomRange = 0x18a1a00;
		constexpr auto ColorHSV = 0x18a17c0;
		constexpr auto get_state_Injected = 0x18a1c50;
		constexpr auto set_state_Injected = 0x18a1d00;
		constexpr auto get_insideUnitSphere_Injected = 0x18a1ad0;
		constexpr auto get_onUnitSphere_Injected = 0x18a1b50;
		constexpr auto get_rotation_Injected = 0x18a1bd0;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x233a10;
		constexpr auto GetHashCode = 0x1379b0;
		constexpr auto Equals = 0x2334d0;
		constexpr auto Raycast = 0x2337a0;
		constexpr auto Internal_RaycastTest = 0x22086b0;
		constexpr auto Internal_Raycast = 0x2208790;
		constexpr auto Internal_RaycastNonAlloc = 0x22085d0;
		constexpr auto Query_CapsuleCast = 0x2208ec0;
		constexpr auto Internal_CapsuleCast = 0x22083b0;
		constexpr auto CapsuleCast = 0x233420;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2208310;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2208be0;
		constexpr auto OverlapCapsule = 0x233600;
		constexpr auto Query_SphereCast = 0x2208fd0;
		constexpr auto Internal_SphereCast = 0x2208900;
		constexpr auto SphereCast = 0x233890;
		constexpr auto Internal_SphereCastNonAlloc = 0x2208870;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2208cd0;
		constexpr auto OverlapSphere = 0x2336a0;
		constexpr auto Query_BoxCast = 0x2208db0;
		constexpr auto Internal_BoxCast = 0x22080e0;
		constexpr auto BoxCast = 0x233230;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2208af0;
		constexpr auto OverlapBox = 0x233550;
		constexpr auto Internal_RaycastTest_Injected = 0x2208640;
		constexpr auto Internal_Raycast_Injected = 0x2208720;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2208560;
		constexpr auto Query_CapsuleCast_Injected = 0x2208e50;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x22082a0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2208b70;
		constexpr auto Query_SphereCast_Injected = 0x2208f60;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2208800;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2208c60;
		constexpr auto Query_BoxCast_Injected = 0x2208d40;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2208a80;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x53bab0;
		constexpr auto IsOnLayer = 0x53b960;
		constexpr auto GetEntityFromRegistry = 0x53b830;
		constexpr auto GetEntityFromComponent = 0x53b730;
		constexpr auto SetHierarchyGroup = 0x53b9f0;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x238;
		constexpr auto rotorPivot = 0x240;
		constexpr auto mainRotor = 0x248;
		constexpr auto mainRotor_blades = 0x250;
		constexpr auto mainRotor_blur = 0x258;
		constexpr auto tailRotor = 0x260;
		constexpr auto tailRotor_blades = 0x268;
		constexpr auto tailRotor_blur = 0x270;
		constexpr auto rocket_tube_left = 0x278;
		constexpr auto rocket_tube_right = 0x280;
		constexpr auto left_gun_yaw = 0x288;
		constexpr auto left_gun_pitch = 0x290;
		constexpr auto left_gun_muzzle = 0x298;
		constexpr auto right_gun_yaw = 0x2a0;
		constexpr auto right_gun_pitch = 0x2a8;
		constexpr auto right_gun_muzzle = 0x2b0;
		constexpr auto spotlight_rotation = 0x2b8;
		constexpr auto rocket_fire_effect = 0x2c0;
		constexpr auto gun_fire_effect = 0x2c8;
		constexpr auto bulletEffect = 0x2d0;
		constexpr auto explosionEffect = 0x2d8;
		constexpr auto fireBall = 0x2e0;
		constexpr auto crateToDrop = 0x2e8;
		constexpr auto maxCratesToSpawn = 0x2f0;
		constexpr auto bulletSpeed = 0x2f4;
		constexpr auto bulletDamage = 0x2f8;
		constexpr auto servergibs = 0x300;
		constexpr auto debrisFieldMarker = 0x308;
		constexpr auto rotorWashSoundDef = 0x310;
		constexpr auto _rotorWashSound = 0x318;
		constexpr auto flightEngineSoundDef = 0x320;
		constexpr auto flightThwopsSoundDef = 0x328;
		constexpr auto flightEngineSound = 0x330;
		constexpr auto flightThwopsSound = 0x338;
		constexpr auto flightEngineGainMod = 0x340;
		constexpr auto flightThwopsGainMod = 0x348;
		constexpr auto rotorGainModSmoothing = 0x350;
		constexpr auto engineGainMin = 0x354;
		constexpr auto engineGainMax = 0x358;
		constexpr auto thwopGainMin = 0x35c;
		constexpr auto thwopGainMax = 0x360;
		constexpr auto spotlightJitterAmount = 0x364;
		constexpr auto spotlightJitterSpeed = 0x368;
		constexpr auto nightLights = 0x370;
		constexpr auto spotlightTarget = 0x378;
		constexpr auto engineSpeed = 0x384;
		constexpr auto targetEngineSpeed = 0x388;
		constexpr auto blur_rotationScale = 0x38c;
		constexpr auto _rotorWashParticles = 0x390;
		constexpr auto myAI = 0x398;
		constexpr auto mapMarkerEntityPrefab = 0x3a0;
		constexpr auto client_rotorPivotIdeal = 0x3a8;
		constexpr auto nightLightsOn = 0x3b8;

		constexpr auto OnRpcMessage = 0x8a03c0;
		constexpr auto InitalizeWeakspots = 0x89fe20;
		constexpr auto MaxVelocity = 0x3218a0;
		constexpr auto InitShared = 0x89fd90;
		constexpr auto Load = 0x8a0100;
		constexpr auto ClientInit = 0x89f790;
		constexpr auto InitializeClientsideEffects = 0x89fea0;
		constexpr auto DoClientDestroy = 0x89f7d0;
		constexpr auto SetLights = 0x8a0810;
		constexpr auto Update = 0x8a1290;
		constexpr auto UpdateEffects = 0x8a0930;
		constexpr auto UpdateRotorWashPosition = 0x8a1150;
		constexpr auto ToggleRotorWash = 0x8a08b0;
		constexpr auto UpdateRotorVisibility = 0x8a10c0;
		constexpr auto FireGun = 0x89f8b0;
		constexpr auto ctor = 0x8a1a20;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x6e4d70;
		constexpr auto get_InitiatorPlayer = 0x6e55c0;
		constexpr auto get_attackNormal = 0x6e5650;
		constexpr auto get_hasDamage = 0x6e5b50;
		constexpr auto ctor = 0x6e53e0;
		constexpr auto LoadFromAttack = 0x6e4d80;
		constexpr auto get_isHeadshot = 0x6e5b80;
		constexpr auto get_bonePhrase = 0x6e59f0;
		constexpr auto get_boneName = 0x6e5860;
		constexpr auto get_boneArea = 0x6e5750;
		constexpr auto PositionOnRay = 0x6e4f80;
		constexpr auto HitPositionOnRay = 0x6e4b40;
		constexpr auto IsNaNOrInfinity = 0x6e4b90;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x162e450;
		constexpr auto NumberBufferToDouble = 0x162e460;
		constexpr auto FormatDecimal = 0x162d970;
		constexpr auto FormatDouble = 0x162da90;
		constexpr auto FormatInt32 = 0x162db10;
		constexpr auto FormatUInt32 = 0x162de70;
		constexpr auto FormatInt64 = 0x162dc80;
		constexpr auto FormatUInt64 = 0x162dfd0;
		constexpr auto FormatSingle = 0x162ddf0;
		constexpr auto HexNumberToInt32 = 0x162e130;
		constexpr auto HexNumberToInt64 = 0x162e1b0;
		constexpr auto HexNumberToUInt32 = 0x162e270;
		constexpr auto HexNumberToUInt64 = 0x162e2f0;
		constexpr auto IsWhite = 0x162e380;
		constexpr auto NumberToInt32 = 0x162e470;
		constexpr auto NumberToInt64 = 0x162e4d0;
		constexpr auto NumberToUInt32 = 0x162e550;
		constexpr auto NumberToUInt64 = 0x162e5b0;
		constexpr auto MatchChars = 0x162e3e0;
		constexpr auto ParseDecimal = 0x162e620;
		constexpr auto ParseDouble = 0x162e790;
		constexpr auto ParseInt32 = 0x162ea40;
		constexpr auto ParseInt64 = 0x162ec90;
		constexpr auto ParseNumber = 0x162ef00;
		constexpr auto ParseSingle = 0x162f9f0;
		constexpr auto ParseUInt32 = 0x162fd10;
		constexpr auto ParseUInt64 = 0x162ff50;
		constexpr auto StringToNumber = 0x16301b0;
		constexpr auto TrailingZeros = 0x16302f0;
		constexpr auto TryParseDecimal = 0x1630350;
		constexpr auto TryParseDouble = 0x16304d0;
		constexpr auto TryParseInt32 = 0x1630650;
		constexpr auto TryParseInt64 = 0x1630890;
		constexpr auto TryParseSingle = 0x1630a60;
		constexpr auto TryParseUInt32 = 0x1630c10;
		constexpr auto TryParseUInt64 = 0x1630e50;
		constexpr auto TryStringToNumber = 0x1631170;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x13140f0;
		constexpr auto OnSerializing = 0x1313750;
		constexpr auto OnDeserializing = 0x2f4fd0;
		constexpr auto OnDeserialized = 0x2f4fd0;
		constexpr auto get_InvariantInfo = 0x1314280;
		constexpr auto GetInstance = 0x13134d0;
		constexpr auto Clone = 0x13133d0;
		constexpr auto get_CurrencyDecimalDigits = 0x32d070;
		constexpr auto get_CurrencyDecimalSeparator = 0x590f20;
		constexpr auto get_IsReadOnly = 0xd3dbb0;
		constexpr auto get_CurrencyGroupSizes = 0x1314100;
		constexpr auto get_NumberGroupSizes = 0x1314390;
		constexpr auto get_PercentGroupSizes = 0x1314410;
		constexpr auto get_CurrencyGroupSeparator = 0x847920;
		constexpr auto get_CurrencySymbol = 0x5b3ca0;
		constexpr auto get_CurrentInfo = 0x1314180;
		constexpr auto get_NaNSymbol = 0x2f8bc0;
		constexpr auto get_CurrencyNegativePattern = 0x10cee20;
		constexpr auto get_NumberNegativePattern = 0x10cee10;
		constexpr auto get_PercentPositivePattern = 0x1113550;
		constexpr auto get_PercentNegativePattern = 0xa86e30;
		constexpr auto get_NegativeInfinitySymbol = 0x501df0;
		constexpr auto get_NegativeSign = 0x32c9d0;
		constexpr auto get_NumberDecimalDigits = 0x2ff130;
		constexpr auto get_NumberDecimalSeparator = 0x67e710;
		constexpr auto get_NumberGroupSeparator = 0x5a6af0;
		constexpr auto get_CurrencyPositivePattern = 0x10cee50;
		constexpr auto get_PositiveInfinitySymbol = 0x501e00;
		constexpr auto get_PositiveSign = 0x8321d0;
		constexpr auto get_PercentDecimalDigits = 0xa86e50;
		constexpr auto get_PercentDecimalSeparator = 0x501e10;
		constexpr auto get_PercentGroupSeparator = 0x501da0;
		constexpr auto get_PercentSymbol = 0x2ff370;
		constexpr auto get_PerMilleSymbol = 0x2ff2a0;
		constexpr auto GetFormat = 0x1313440;
		constexpr auto ReadOnly = 0x13137e0;
		constexpr auto ValidateParseStyleInteger = 0x1313960;
		constexpr auto ValidateParseStyleFloatingPoint = 0x1313890;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x18028e0;
		constexpr auto Vertex = 0x1802940;
		constexpr auto TexCoord3 = 0x1802880;
		constexpr auto TexCoord2 = 0x1802830;
		constexpr auto MultiTexCoord3 = 0x1802760;
		constexpr auto MultiTexCoord2 = 0x1802700;
		constexpr auto ImmediateColor = 0x1802440;
		constexpr auto Color = 0x1802110;
		constexpr auto get_sRGBWrite = 0x18029a0;
		constexpr auto set_sRGBWrite = 0x18029d0;
		constexpr auto Flush = 0x18021a0;
		constexpr auto MultMatrix = 0x18026c0;
		constexpr auto PushMatrix = 0x1802800;
		constexpr auto PopMatrix = 0x18027d0;
		constexpr auto LoadIdentity = 0x1802570;
		constexpr auto LoadOrtho = 0x18025a0;
		constexpr auto LoadPixelMatrix = 0x18025d0;
		constexpr auto LoadProjectionMatrix = 0x1802640;
		constexpr auto GetGPUProjectionMatrix = 0x18023d0;
		constexpr auto GLLoadPixelMatrixScript = 0x18022f0;
		constexpr auto GLIssuePluginEvent = 0x18022b0;
		constexpr auto IssuePluginEvent = 0x18024c0;
		constexpr auto Begin = 0x1802020;
		constexpr auto End = 0x1802170;
		constexpr auto GLClear = 0x1802240;
		constexpr auto Clear = 0x18020b0;
		constexpr auto ClearWithSkybox = 0x1802060;
		constexpr auto MultMatrix_Injected = 0x1802680;
		constexpr auto LoadProjectionMatrix_Injected = 0x1802600;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x1802370;
		constexpr auto GLClear_Injected = 0x18021d0;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x188e750;
		constexpr auto CreateWithMaterial = 0x188e700;
		constexpr auto CreateWithString = 0x188e7a0;
		constexpr auto ctor = 0x188fd00;
		constexpr auto get_shader = 0x188ffc0;
		constexpr auto set_shader = 0x1890150;
		constexpr auto get_color = 0x188fd90;
		constexpr auto set_color = 0x1890000;
		constexpr auto get_mainTexture = 0x188fea0;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x188ea70;
		constexpr auto HasProperty = 0x188ef80;
		constexpr auto get_renderQueue = 0x188ff80;
		constexpr auto set_renderQueue = 0x1890110;
		constexpr auto EnableKeyword = 0x188e830;
		constexpr auto DisableKeyword = 0x188e7e0;
		constexpr auto IsKeywordEnabled = 0x188efc0;
		constexpr auto get_enableInstancing = 0x188fe60;
		constexpr auto set_enableInstancing = 0x18900c0;
		constexpr auto get_passCount = 0x188ff40;
		constexpr auto GetShaderPassEnabled = 0x188ebc0;
		constexpr auto GetPassName = 0x188eb40;
		constexpr auto FindPass = 0x188e880;
		constexpr auto SetOverrideTag = 0x188f750;
		constexpr auto GetTagImpl = 0x188ec10;
		constexpr auto GetTag = 0x188ed10;
		constexpr auto SetPass = 0x188f7b0;
		constexpr auto CopyPropertiesFromMaterial = 0x188e6b0;
		constexpr auto GetShaderKeywords = 0x188eb80;
		constexpr auto SetShaderKeywords = 0x188f7f0;
		constexpr auto get_shaderKeywords = 0x188eb80;
		constexpr auto set_shaderKeywords = 0x188f7f0;
		constexpr auto SetFloatImpl = 0x188f4a0;
		constexpr auto SetColorImpl = 0x188f110;
		constexpr auto SetMatrixImpl = 0x188f610;
		constexpr auto SetTextureImpl = 0x188f840;
		constexpr auto SetBufferImpl = 0x188f010;
		constexpr auto GetFloatImpl = 0x188eab0;
		constexpr auto GetColorImpl = 0x188e920;
		constexpr auto GetTextureImpl = 0x188ed80;
		constexpr auto SetFloatArrayImpl = 0x188f210;
		constexpr auto SetTextureOffsetImpl = 0x188f8e0;
		constexpr auto SetTextureScaleImpl = 0x188f9e0;
		constexpr auto SetFloatArray = 0x188f370;
		constexpr auto SetFloat = 0x188f4f0;
		constexpr auto SetInt = 0x188f550;
		constexpr auto SetColor = 0x188f1b0;
		constexpr auto SetVector = 0x188faf0;
		constexpr auto SetMatrix = 0x188f6d0;
		constexpr auto SetTexture = 0x188fa90;
		constexpr auto SetBuffer = 0x188f060;
		constexpr auto GetFloat = 0x188eaf0;
		constexpr auto GetColor = 0x188e9f0;
		constexpr auto GetVector = 0x188ee10;
		constexpr auto GetTexture = 0x188edc0;
		constexpr auto SetTextureOffset = 0x188f930;
		constexpr auto SetTextureScale = 0x188fa30;
		constexpr auto SetColorImpl_Injected = 0x188f0c0;
		constexpr auto SetMatrixImpl_Injected = 0x188f5c0;
		constexpr auto GetColorImpl_Injected = 0x188e8d0;
		constexpr auto SetTextureOffsetImpl_Injected = 0x188f890;
		constexpr auto SetTextureScaleImpl_Injected = 0x188f990;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x18e3840;
		constexpr auto get_height = 0x18e37e0;
		constexpr auto get_dpi = 0x18e3780;
		constexpr auto get_currentResolution = 0x18e3740;
		constexpr auto get_fullScreen = 0x18e37b0;
		constexpr auto SetResolution = 0x18e3640;
		constexpr auto get_resolutions = 0x18e3810;
		constexpr auto get_currentResolution_Injected = 0x18e3700;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x110def0;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1111dc0;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x110f380;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1111e00;
	};

}

